export const semaphoreContract = {
    "abi": [
      {
        "inputs": [],
        "name": "ExpiredRoot",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "InvalidCommitment",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "InvalidId",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "InvalidProof",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "InvalidRoot",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NonExistentRoot",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Unauthorized",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint8",
            "name": "depth",
            "type": "uint8"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "zeroValue",
            "type": "uint256"
          }
        ],
        "name": "GroupCreated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "leafIndex",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "identityCommitment",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "newRoot",
            "type": "uint256"
          }
        ],
        "name": "MemberAdded",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "identityCommitment",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "root",
            "type": "uint256"
          }
        ],
        "name": "MemberAdded",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "identityCommitment",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "root",
            "type": "uint256"
          }
        ],
        "name": "MemberRemoved",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "nullifierHash",
            "type": "uint256"
          }
        ],
        "name": "NullifierHashAdded",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "identityCommitment",
            "type": "uint256"
          }
        ],
        "name": "addMember",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "root",
            "type": "uint256"
          }
        ],
        "name": "checkValidRoot",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "depth",
            "type": "uint8"
          }
        ],
        "name": "createGroup",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          }
        ],
        "name": "getDepth",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          }
        ],
        "name": "getNumberOfLeaves",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          }
        ],
        "name": "getRoot",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "latestRoots",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "manager",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "identityCommitment",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "proofSiblings",
            "type": "uint256[]"
          },
          {
            "internalType": "uint8[]",
            "name": "proofPathIndices",
            "type": "uint8[]"
          }
        ],
        "name": "removeMember",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newManager",
            "type": "address"
          }
        ],
        "name": "transferAccess",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "root",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "groupId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "signalHash",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "nullifierHash",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "externalNullifierHash",
            "type": "uint256"
          },
          {
            "internalType": "uint256[8]",
            "name": "proof",
            "type": "uint256[8]"
          }
        ],
        "name": "verifyProof",
        "outputs": [],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256[2]",
            "name": "a",
            "type": "uint256[2]"
          },
          {
            "internalType": "uint256[2][2]",
            "name": "b",
            "type": "uint256[2][2]"
          },
          {
            "internalType": "uint256[2]",
            "name": "c",
            "type": "uint256[2]"
          },
          {
            "internalType": "uint256[4]",
            "name": "input",
            "type": "uint256[4]"
          }
        ],
        "name": "verifyProof",
        "outputs": [],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "bytecode": {
      "object": "0x6080604052600280546001600160a01b0319163317905534801561002257600080fd5b50611c7d806100326000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806375e618c91161007157806375e618c91461014a5780639b24b3b01461017f578063b9c78c2b146101b1578063c42044e0146101d4578063e914f0e2146101f4578063ffdad3ff1461021757600080fd5b80631783efc3146100b95780633bc778e3146100ce57806343989f85146100e1578063481c6a75146100f45780635fe8c13b1461012457806366e759ee14610137575b600080fd5b6100cc6100c73660046117ba565b61022a565b005b6100cc6100dc3660046117dc565b6103a5565b6100cc6100ef366004611883565b610449565b600254610107906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc6101323660046119b8565b6105c4565b6100cc610145366004611a96565b61093f565b61016d610158366004611ac6565b60009081526001602052604090205460ff1690565b60405160ff909116815260200161011b565b6101a361018d366004611ac6565b6000908152600160208190526040909120015490565b60405190815260200161011b565b6101a36101bf366004611ac6565b60009081526001602052604090206002015490565b6101a36101e2366004611ac6565b60046020526000908152604090205481565b6102076102023660046117ba565b61098b565b604051901515815260200161011b565b6100cc610225366004611af5565b610a6a565b6002546001600160a01b03163314610254576040516282b42960e81b815260040160405180910390fd5b8061027257604051636033c4fd60e11b815260040160405180910390fd5b6000828152600160205260408082209051630b4381fd60e11b815260048101919091526024810183905273__$1e100f9b4885acd773f112628c245ebaf3$__9063168703fa90604401602060405180830381865af41580156102d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fc9190611b21565b600084815260016020818152604080842090920154825180840184526001600160801b03808a1682524281168285019081528387526003855285872092519051908216600160801b9190921602179055878452600482529282902083905581518481529081018690528082018390529051929350909185917f19239b3f93cd10558aaf11423af70c77763bf54f52bcc75bfa74d4d13548cde9919081900360600190a250505050565b60408051608080820183528882526020808301879052828401889052606080840187905284518086018652863581528683013581840152855180850187528787013581880190815288840135938201939093529182528551808701875293870135845260a08701358484015281830193909352845180860190955260c0860135855292936104409391810186600760200201359052846105c4565b50505050505050565b6002546001600160a01b03163314610473576040516282b42960e81b815260040160405180910390fd5b60008681526001602052604081205460ff1690036104a457604051631bf4348160e31b815260040160405180910390fd5b600086815260016020526040908190209051630629596f60e01b815273__$1e100f9b4885acd773f112628c245ebaf3$$1e100f9b4885acd773f112628c245ebaf3$__9063b4bdd1179060640160006040518083038186803b15801561162557600080fd5b505af4158015611639573d6000803e3d6000fd5b50506040805160ff86168152602081018590528693507fc3082aa494e9088c2c9f0fb62a0b6bd46e6699acb94cfba35be29b95a93f68c892500160405180910390a2505050565b6040805160a0810190915260006060820181815260808301919091528152602081016116aa6116d1565b81526020016116cc604051806040016040528060008152602001600081525090565b905290565b60405180604001604052806116e461179c565b81526020016116cc61179c565b6040805160e08101909152600060a0820181815260c083019190915281526020810161171b6116d1565b81526020016117286116d1565b81526020016117356116d1565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b600080604083850312156117cd57600080fd5b50508035926020909101359150565b6000806000806000806101a080888a0312156117f757600080fd5b873596506020880135955060408801359450606088013593506080880135925088818901111561182657600080fd5b5060a0870190509295509295509295565b60008083601f84011261184957600080fd5b50813567ffffffffffffffff81111561186157600080fd5b6020830191508360208260051b850101111561187c57600080fd5b9250929050565b6000806000806000806080878903121561189c57600080fd5b8635955060208701359450604087013567ffffffffffffffff808211156118c257600080fd5b6118ce8a838b01611837565b909650945060608901359150808211156118e757600080fd5b506118f489828a01611837565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561193f5761193f611906565b60405290565b6040516080810167ffffffffffffffff8111828210171561193f5761193f611906565b600082601f83011261197957600080fd5b61198161191c565b80604084018581111561199357600080fd5b845b818110156119ad578035845260209384019301611995565b509095945050505050565b6000806000806101808086880312156119d057600080fd5b6119da8787611968565b9450604087605f8801126119ed57600080fd5b6119f561191c565b8060c089018a811115611a0757600080fd5b838a015b81811015611a2c57611a1d8c82611968565b84526020909301928401611a0b565b50819750611a3a8b82611968565b9650505050508661011f870112611a5057600080fd5b611a58611945565b908601908088831115611a6a57600080fd5b61010088015b83811015611a88578035835260209283019201611a70565b509598949750929550505050565b600060208284031215611aa857600080fd5b81356001600160a01b0381168114611abf57600080fd5b9392505050565b600060208284031215611ad857600080fd5b5035919050565b803560ff81168114611af057600080fd5b919050565b60008060408385031215611b0857600080fd5b82359150611b1860208401611adf565b90509250929050565b600060208284031215611b3357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b8681526000602087818401526080604084015285608084015260018060fb1b03861115611b7c57600080fd5b8560051b808860a0860137830183810360a090810160608601528101859052859060009060c0015b86821015611bcc5760ff611bb784611adf565b16815291830191600191909101908301611ba4565b9b9a5050505050505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610a6457610a64611bdb565b81810381811115610a6457610a64611bdb565b8082028115828204841417610a6457610a64611bdb565b600060018201611c4057611c40611bdb565b506001019056fea2646970667358221220eb8bbcc4f7f20964e3ea244f71a0ed9425b02bfd760e88e3cc32383daaf499df64736f6c63430008130033",
      "sourceMap": "583:8747:10:-:0;;;3080:35;;;-1:-1:-1;;;;;;3080:35:10;3105:10;3080:35;;;583:8747;;;;;;;;;;;;;;;;",
      "linkReferences": {
        "lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol": {
          "IncrementalBinaryTree": [
            {
              "start": 720,
              "length": 20
            },
            {
              "start": 1268,
              "length": 20
            },
            {
              "start": 5666,
              "length": 20
            }
          ]
        }
      }
    },
    "deployedBytecode": {
      "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806375e618c91161007157806375e618c91461014a5780639b24b3b01461017f578063b9c78c2b146101b1578063c42044e0146101d4578063e914f0e2146101f4578063ffdad3ff1461021757600080fd5b80631783efc3146100b95780633bc778e3146100ce57806343989f85146100e1578063481c6a75146100f45780635fe8c13b1461012457806366e759ee14610137575b600080fd5b6100cc6100c73660046117ba565b61022a565b005b6100cc6100dc3660046117dc565b6103a5565b6100cc6100ef366004611883565b610449565b600254610107906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc6101323660046119b8565b6105c4565b6100cc610145366004611a96565b61093f565b61016d610158366004611ac6565b60009081526001602052604090205460ff1690565b60405160ff909116815260200161011b565b6101a361018d366004611ac6565b6000908152600160208190526040909120015490565b60405190815260200161011b565b6101a36101bf366004611ac6565b60009081526001602052604090206002015490565b6101a36101e2366004611ac6565b60046020526000908152604090205481565b6102076102023660046117ba565b61098b565b604051901515815260200161011b565b6100cc610225366004611af5565b610a6a565b6002546001600160a01b03163314610254576040516282b42960e81b815260040160405180910390fd5b8061027257604051636033c4fd60e11b815260040160405180910390fd5b6000828152600160205260408082209051630b4381fd60e11b815260048101919091526024810183905273__$1e100f9b4885acd773f112628c245ebaf3$__9063168703fa90604401602060405180830381865af41580156102d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fc9190611b21565b600084815260016020818152604080842090920154825180840184526001600160801b03808a1682524281168285019081528387526003855285872092519051908216600160801b9190921602179055878452600482529282902083905581518481529081018690528082018390529051929350909185917f19239b3f93cd10558aaf11423af70c77763bf54f52bcc75bfa74d4d13548cde9919081900360600190a250505050565b60408051608080820183528882526020808301879052828401889052606080840187905284518086018652863581528683013581840152855180850187528787013581880190815288840135938201939093529182528551808701875293870135845260a08701358484015281830193909352845180860190955260c0860135855292936104409391810186600760200201359052846105c4565b50505050505050565b6002546001600160a01b03163314610473576040516282b42960e81b815260040160405180910390fd5b60008681526001602052604081205460ff1690036104a457604051631bf4348160e31b815260040160405180910390fd5b600086815260016020526040908190209051630629596f60e01b815273__$1e100f9b4885acd773f112628c245ebaf3$$1e100f9b4885acd773f112628c245ebaf3$__9063b4bdd1179060640160006040518083038186803b15801561162557600080fd5b505af4158015611639573d6000803e3d6000fd5b50506040805160ff86168152602081018590528693507fc3082aa494e9088c2c9f0fb62a0b6bd46e6699acb94cfba35be29b95a93f68c892500160405180910390a2505050565b6040805160a0810190915260006060820181815260808301919091528152602081016116aa6116d1565b81526020016116cc604051806040016040528060008152602001600081525090565b905290565b60405180604001604052806116e461179c565b81526020016116cc61179c565b6040805160e08101909152600060a0820181815260c083019190915281526020810161171b6116d1565b81526020016117286116d1565b81526020016117356116d1565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b600080604083850312156117cd57600080fd5b50508035926020909101359150565b6000806000806000806101a080888a0312156117f757600080fd5b873596506020880135955060408801359450606088013593506080880135925088818901111561182657600080fd5b5060a0870190509295509295509295565b60008083601f84011261184957600080fd5b50813567ffffffffffffffff81111561186157600080fd5b6020830191508360208260051b850101111561187c57600080fd5b9250929050565b6000806000806000806080878903121561189c57600080fd5b8635955060208701359450604087013567ffffffffffffffff808211156118c257600080fd5b6118ce8a838b01611837565b909650945060608901359150808211156118e757600080fd5b506118f489828a01611837565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561193f5761193f611906565b60405290565b6040516080810167ffffffffffffffff8111828210171561193f5761193f611906565b600082601f83011261197957600080fd5b61198161191c565b80604084018581111561199357600080fd5b845b818110156119ad578035845260209384019301611995565b509095945050505050565b6000806000806101808086880312156119d057600080fd5b6119da8787611968565b9450604087605f8801126119ed57600080fd5b6119f561191c565b8060c089018a811115611a0757600080fd5b838a015b81811015611a2c57611a1d8c82611968565b84526020909301928401611a0b565b50819750611a3a8b82611968565b9650505050508661011f870112611a5057600080fd5b611a58611945565b908601908088831115611a6a57600080fd5b61010088015b83811015611a88578035835260209283019201611a70565b509598949750929550505050565b600060208284031215611aa857600080fd5b81356001600160a01b0381168114611abf57600080fd5b9392505050565b600060208284031215611ad857600080fd5b5035919050565b803560ff81168114611af057600080fd5b919050565b60008060408385031215611b0857600080fd5b82359150611b1860208401611adf565b90509250929050565b600060208284031215611b3357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b8681526000602087818401526080604084015285608084015260018060fb1b03861115611b7c57600080fd5b8560051b808860a0860137830183810360a090810160608601528101859052859060009060c0015b86821015611bcc5760ff611bb784611adf565b16815291830191600191909101908301611ba4565b9b9a5050505050505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610a6457610a64611bdb565b81810381811115610a6457610a64611bdb565b8082028115828204841417610a6457610a64611bdb565b600060018201611c4057611c40611bdb565b506001019056fea2646970667358221220eb8bbcc4f7f20964e3ea244f71a0ed9425b02bfd760e88e3cc32383daaf499df64736f6c63430008130033",
      "sourceMap": "583:8747:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4441:578;;;;;;:::i;:::-;;:::i;:::-;;6905:857;;;;;;:::i;:::-;;:::i;5404:735::-;;;;;;:::i;:::-;;:::i;3080:35::-;;;;;-1:-1:-1;;;;;3080:35:10;;;;;;-1:-1:-1;;;;;2336:32:12;;;2318:51;;2306:2;2291:18;3080:35:10;;;;;;;;8527:1304:4;;;;;;:::i;:::-;;:::i;8200:147:10:-;;;;;;:::i;:::-;;:::i;2884:119:3:-;;;;;;:::i;:::-;2957:5;2977:15;;;:6;:15;;;;;:21;;;;2884:119;;;;5554:4:12;5542:17;;;5524:36;;5512:2;5497:18;2884:119:3;5382:184:12;2717:119:3;;;;;;:::i;:::-;2789:7;2811:15;;;:6;:15;;;;;;;;:20;;;2717:119;;;;5717:25:12;;;5705:2;5690:18;2717:119:3;5571:177:12;3060:139:3;;;;;;:::i;:::-;3142:7;3164:15;;;:6;:15;;;;;:30;;;;3060:139;3181:46:10;;;;;;:::i;:::-;;;;;;;;;;;;;;8796:532;;;;;;:::i;:::-;;:::i;:::-;;;5918:14:12;;5911:22;5893:41;;5881:2;5866:18;8796:532:10;5753:187:12;4052:174:10;;;;;;:::i;:::-;;:::i;4441:578::-;4540:7;;-1:-1:-1;;;;;4540:7:10;4526:10;:21;4522:48;;4556:14;;-1:-1:-1;;;4556:14:10;;;;;;;;;;;4522:48;4585:18;4581:64;;4626:19;;-1:-1:-1;;;4626:19:10;;;;;;;;;;;4581:64;4656:17;4676:15;;;:6;:15;;;;;;:42;;-1:-1:-1;;;4676:42:10;;;;;6581:25:12;;;;6622:18;;;6615:34;;;4676:22:10;;;;6554:18:12;;4676:42:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4729:12;2811:15:3;;;:6;:15;;;;;;;;:20;;;;4790:111:10;;;;;;;-1:-1:-1;;;;;4790:111:10;;;;;4874:15;4790:111;;;;;;;;4770:17;;;:11;:17;;;;;:131;;;;;;;-1:-1:-1;;;4770:131:10;;;;;;;;4912:20;;;:11;:20;;;;;;:27;;;4955:57;;7051:25:12;;;7092:18;;;7085:34;;;7135:18;;;7128:34;;;4955:57:10;;4656:62;;-1:-1:-1;2811:20:3;;:15;;4955:57:10;;;;;;7039:2:12;4955:57:10;;;4512:507;;4441:578;;:::o;6905:857::-;7134:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7293:174;;;;;;;7319:8;;7293:174;;7329:8;;;;7293:174;;;;;;;;;;;7354:8;;;;7293:174;;;;;;7364:8;;;;7293:174;;;;;;;;;;;;;;;;;7376:8;;;;7293:174;;7386:8;;;;7293:174;;;;-1:-1:-1;;;7293:174:10;;;;;;;;;;;;7411:8;;;;7293:174;;7134:148;;7293:174;;;;;7319:8;7427:1;7421:8;;;;7293:174;;7444:13;7293:11;:174::i;:::-;7124:638;6905:857;;;;;;:::o;5404:735::-;5613:7;;-1:-1:-1;;;;;5613:7:10;5599:10;:21;5595:48;;5629:14;;-1:-1:-1;;;5629:14:10;;;;;;;;;;;5595:48;2957:5:3;2977:15;;;:6;:15;;;;;:21;;;5657:22:10;;5653:46;;5688:11;;-1:-1:-1;;;5688:11:10;;;;;;;;;;;5653:46;5710:15;;;;:6;:15;;;;;;;:121;;-1:-1:-1;;;5710:121:10;;:22;;;;:121;;:15;5746:18;;5778:13;;;;5805:16;;;;5710:121;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5842:12:10;2811:15:3;;;:6;:15;;;;;;;;:20;;;;5903:111:10;;;;;;;-1:-1:-1;;;;;5903:111:10;;;;;5987:15;5903:111;;;;;;;;5883:17;;;:11;:17;;;;;:131;;;;;;-1:-1:-1;;;5883:131:10;;;;;;6025:20;;;:11;:20;;;;;;:27;;;6111:15;;;:20;;6068:64;;6581:25:12;;;6622:18;;;6615:34;2811:20:3;;-1:-1:-1;2811:15:3;;6068:64:10;;6554:18:12;6068:64:10;;;;;;;5585:554;5404:735;;;;;;:::o;8527:1304:4:-;8762:18;;:::i;:::-;8796:27;;;;;;;;8812:4;;8796:27;;8812:4;8818;;;;8796:27;;;;8786:37;;;8839:55;;;;;;;8856:4;;:7;8839:55;;;;;;8865:4;;:7;;;8839:55;;;;;;;;;;;;;8876:4;;;;;:7;8839:55;;8885:4;:7;;;8839:55;;;;-1:-1:-1;;;8839:55:4;8829:7;;;:65;8910:27;;;;;;;8926:4;;8910:27;;8932:4;;;;8910:27;;;;;;;8900:7;;;:37;-1:-1:-1;8969:14:4;:12;:14::i;:::-;9076:5;;;;:12;8944:39;;-1:-1:-1;9056:16:4;:12;9071:1;9056:16;:::i;:::-;:32;9052:67;;9097:22;;-1:-1:-1;;;9097:22:4;;;;;;;;;;;9052:67;9125:27;9155:2;:5;;;9161:1;9155:8;;;;;;;;:::i;:::-;;;;;;;9125:38;;9176:62;9193:4;9199:38;9218:2;:5;;;9224:1;9218:8;;;;;;;;:::i;:::-;;;;;;;9228:5;9234:1;9228:8;;;;;;;:::i;:::-;;;;;9199:18;:38::i;:::-;9176:16;:62::i;:::-;9169:69;;9251:62;9268:4;9274:38;9293:2;:5;;;9299:1;9293:8;;;;;;;;:::i;:::-;;;;;;;9303:5;9309:1;9303:8;;;;;;;:::i;9251:62::-;9244:69;;9326:62;9343:4;9349:38;9368:2;:5;;;9374:1;9368:8;;;;;;;;:::i;:::-;;;;;;;9378:5;9384:1;9378:8;;;;;;;:::i;9326:62::-;9319:69;;9401:62;9418:4;9424:38;9443:2;:5;;;9449:1;9443:8;;;;;;;;:::i;:::-;;;;;;;9453:5;9459:1;9453:8;;;;;;;:::i;9401:62::-;9521:24;;;9543:1;9521:24;;;;;;;;;9394:69;;-1:-1:-1;9491:27:4;;9521:24;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9521:24:4;;;;;;;;;;;;-1:-1:-1;;9581:24:4;;;9603:1;9581:24;;;;;;;;;9491:54;;-1:-1:-1;9551:27:4;;9581:24;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;9634:7:4;;9551:54;;-1:-1:-1;9619:23:4;;:14;:23::i;:::-;9611:2;9614:1;9611:5;;;;;;;;:::i;:::-;;;;;;:31;;;;9656:5;:7;;;9648:2;9651:1;9648:5;;;;;;;;:::i;:::-;;;;;;:15;;;;9677:2;:8;;;9669:2;9672:1;9669:5;;;;;;;;:::i;:::-;;;;;;:16;;;;9699:2;:8;;;9691:2;9694:1;9691:5;;;;;;;;:::i;:::-;;;;;;:16;;;;9721:4;9713:2;9716:1;9713:5;;;;;;;;:::i;:::-;;;;;;:12;;;;9739:2;:9;;;9731:2;9734:1;9731:5;;;;;;;;:::i;:::-;;;;;;:17;;;;9762:5;:7;;;9754:2;9757:1;9754:5;;;;;;;;:::i;:::-;;;;;;:15;;;;9783:2;:9;;;9775:2;9778:1;9775:5;;;;;;;;:::i;:::-;;;;;;:17;;;;9798:28;9819:2;9823;9798:20;:28::i;:::-;8671:1160;;;;;8527:1304;;;;:::o;8200:147:10:-;8279:7;;-1:-1:-1;;;;;8279:7:10;8265:10;:21;8261:48;;8295:14;;-1:-1:-1;;;8295:14:10;;;;;;;;;;;8261:48;8320:7;:20;;-1:-1:-1;;;;;;8320:20:10;-1:-1:-1;;;;;8320:20:10;;;;;;;;;;8200:147::o;8796:532::-;8894:4;8935:20;;;:11;:20;;;;;;8927:28;;;;:66;;-1:-1:-1;2969:1:10;8959:20;;;:11;:20;;;;;;:34;8927:66;8910:390;;;9018:27;9048:17;;;:11;:17;;;;;;;;;9018:47;;;;;;;;;-1:-1:-1;;;;;9018:47:10;;;;;-1:-1:-1;;;9018:47:10;;;;;;;;;;2760:7;;9084:36;;:15;:36;:::i;:::-;:58;9080:100;;;9167:13;;-1:-1:-1;;;9167:13:10;;;;;;;;;;;9080:100;9199:16;;-1:-1:-1;;;;;9199:21:10;;:48;;;;-1:-1:-1;9224:18:10;;;;-1:-1:-1;;;;;9224:23:10;;9199:48;9195:94;;;9272:17;;-1:-1:-1;;;9272:17:10;;;;;;;;;;;9195:94;9004:296;8910:390;-1:-1:-1;9317:4:10;8796:532;;;;;:::o;4052:174::-;4138:7;;-1:-1:-1;;;;;4138:7:10;4124:10;:21;4120:48;;4154:14;;-1:-1:-1;;;4154:14:10;;;;;;;;;;;4120:48;4179:40;4192:7;4201:5;2969:1;4179:12;:40::i;:::-;4052:174;;:::o;5822:2611:4:-;5869:22;;:::i;:::-;5910:190;;;;;;;;5933:77;5910:190;;6018:76;5910:190;;;;;;;;5899:201;;;6118:399;;;;;;;;6151:76;6118:399;;;;;;6237:76;6118:399;;;;;;;;;;;;;;;;;;6339:77;6118:399;;6426:77;6118:399;;;;-1:-1:-1;;;6118:399:4;6107:8;;;:410;;;;6535:399;;;;;;;6568:77;6535:399;;;;;;6655:77;6535:399;;;;;;;;;;;;;6758:76;6535:399;;6844:76;6535:399;;;;-1:-1:-1;;;6535:399:4;6523:9;;;:411;6952:400;;;;;;;6985:77;6952:400;;;;;;7072:76;6952:400;;;;;;;;;;;;;7174:77;6952:400;;7261:77;6952:400;;;;-1:-1:-1;;;6952:400:4;6940:9;;;:412;7366:24;;7388:1;7366:24;;;;;;;;;;7388:1;7366:24;;;-1:-1:-1;;;;;;;;;;;;;;;;;7366:24:4;;;;;;;;;;;;-1:-1:-1;;7358:5:4;;;:32;;;7408:190;;;;;;;;;7431:77;7408:190;;7516:76;7408:190;;;;7397:5;;:8;;-1:-1:-1;;7397:8:4;;;;:::i;:::-;;;;;;:201;;;;7616:189;;;;;;;;7639:75;7616:189;;;;7722:77;7616:189;;;7605:2;:5;;;7611:1;7605:8;;;;;;;;:::i;:::-;;;;;;:200;;;;7823:190;;;;;;;;7846:77;7823:190;;;;7931:76;7823:190;;;7812:2;:5;;;7818:1;7812:8;;;;;;;;:::i;:::-;;;;;;:201;;;;8031:190;;;;;;;;8054:76;8031:190;;;;8138:77;8031:190;;;8020:2;:5;;;8026:1;8020:8;;;;;;;;:::i;:::-;;;;;;:201;;;;8239:189;;;;;;;;8262:76;8239:189;;;;8346:76;8239:189;;;8228:2;:5;;;8234:1;8228:8;;;;;;;;:::i;:::-;;;;;;:200;;;;5822:2611;:::o;3757:633::-;-1:-1:-1;;;;;;;;;;;;;;;;;1718:77:4;4045:1;:19;4041:46;;4073:14;;-1:-1:-1;;;4073:14:4;;;;;;;;;;;4041:46;4093:23;;:::i;:::-;4133:3;;4122:14;;:8;4153:3;;;;4142:8;;;:14;4162:8;;;:12;;;-1:-1:-1;4334:4:4;4331:1;4325:4;4122:14;4315:1;4308:4;4301:5;4297:16;4286:53;4275:64;;4355:7;4350:35;;4371:14;;-1:-1:-1;;;4371:14:4;;;;;;;;;;;4350:35;3847:543;;3757:633;;;;:::o;3070:537::-;-1:-1:-1;;;;;;;;;;;;;;;;;3284:23:4;;:::i;:::-;3324:4;;3313:15;;:8;3345:4;;;;3334:8;;;:15;3366:4;;3355:8;;;:15;3387:4;;;3376:8;;;;:15;;;;-1:-1:-1;;3548:1:4;3542:4;3313:15;3532:1;3525:4;3518:5;3514:16;3503:53;3492:64;;3572:7;3567:35;;3588:14;;-1:-1:-1;;;3588:14:4;;;;;;;;;;;2691:331;-1:-1:-1;;;;;;;;;;;;;;;;;2776:3:4;;:8;:20;;;;-1:-1:-1;2788:3:4;;;;:8;2776:20;2772:46;;;-1:-1:-1;;2805:13:4;;;;;;;;;-1:-1:-1;2805:13:4;;;;;;;;2691:331::o;2772:46::-;2860:3;;1552:77;-1:-1:-1;2860:19:4;;:42;;;1552:77;2883:1;:3;;;:19;;2860:42;2856:69;;;2911:14;;-1:-1:-1;;;2911:14:4;;;;;;;;;;;2856:69;2985:32;;;;;;;;2993:1;:3;;;2985:32;;;;3013:1;:3;;;1552:77;2998:18;;;;:::i;:::-;2985:32;;2978:39;2691:331;-1:-1:-1;;2691:331:4:o;4557:959::-;4803:2;:9;4790:2;:9;:22;4786:49;;4821:14;;-1:-1:-1;;;4821:14:4;;;;;;;;;;;4786:49;4860:9;;4841:16;4895:12;4860:9;4906:1;4895:12;:::i;:::-;4875:32;;4913:22;4952:9;4938:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4938:24:4;;4913:49;;4973:9;4968:262;4992:8;4988:1;:12;4968:262;;;5034:2;5037:1;5034:5;;;;;;;;:::i;:::-;;;;;;;:7;;;5015:5;5021:1;5025;5021:5;;;;:::i;:::-;:9;;5029:1;5021:9;:::i;:::-;5015:16;;;;;;;;:::i;:::-;;;;;;:26;;;;;5068:2;5071:1;5068:5;;;;;;;;:::i;:::-;;;;;;;:7;;;5049:5;5055:1;5059;5055:5;;;;:::i;:::-;:9;;5063:1;5055:9;:::i;:::-;5049:16;;;;;;;;:::i;:::-;;;;;;:26;;;;;5102:2;5105:1;5102:5;;;;;;;;:::i;:::-;;;;;;;;;;;:7;:10;5083:5;5089;:1;5093;5089:5;:::i;:::-;:9;;5097:1;5089:9;:::i;:::-;5083:16;;;;;;;;:::i;:::-;;;;;;:29;;;;;5139:2;5142:1;5139:5;;;;;;;;:::i;:::-;;;;;;;;;;;;:7;:10;;5120:5;5126;:1;5130;5126:5;:::i;:::-;:9;;5134:1;5126:9;:::i;:::-;5120:16;;;;;;;;:::i;:::-;;;;;;:29;;;;;5176:2;5179:1;5176:5;;;;;;;;:::i;:::-;;;;;;;:7;;;5184:1;5176:10;;;;;;;:::i;:::-;;;;;5157:5;5163;:1;5167;5163:5;:::i;:::-;:9;;5171:1;5163:9;:::i;:::-;5157:16;;;;;;;;:::i;:::-;;;;;;:29;;;;;5213:2;5216:1;5213:5;;;;;;;;:::i;:::-;;;;;;;:7;;;5221:1;5213:10;;;;;;;:::i;:::-;;;;;5194:5;5200;:1;5204;5200:5;:::i;:::-;:9;;5208:1;5200:9;:::i;:::-;5194:16;;;;;;;;:::i;:::-;;;;;;;;;;:29;5002:3;;;;:::i;:::-;;;;4968:262;;;;5235:21;;:::i;:::-;5262:12;5445:4;5440:3;5433:4;5422:9;5418:20;5411:4;5404:5;5400:16;5397:1;5390:4;5383:5;5379:16;5368:82;5357:93;;5466:7;5465:8;:23;;;-1:-1:-1;5477:6:4;;5487:1;5477:11;;5465:23;5461:50;;;5497:14;;-1:-1:-1;;;5497:14:4;;;;;;;;;;;950:384:3;98:77:1;1068:7:3;:28;1060:95;;;;-1:-1:-1;;;1060:95:3;;9649:2:12;1060:95:3;;;9631:21:12;9688:2;9668:18;;;9661:30;9727:34;9707:18;;;9700:62;-1:-1:-1;;;9778:18:12;;;9771:52;9840:19;;1060:95:3;;;;;;;;;2957:5;2977:15;;;:6;:15;;;;;:21;;;1169:22;1161:72;;;;-1:-1:-1;;;1161:72:3;;10072:2:12;1161:72:3;;;10054:21:12;10111:2;10091:18;;;10084:30;10150:34;10130:18;;;10123:62;-1:-1:-1;;;10201:18:12;;;10194:35;10246:19;;1161:72:3;9870:401:12;1161:72:3;1240:15;;;;:6;:15;;;;;;;:38;;-1:-1:-1;;;1240:38:3;;;;;10520:25:12;;;;10593:4;10581:17;;10561:18;;;10554:45;10615:18;;;10608:34;;;1240:20:3;;;;10493:18:12;;1240:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1290:39:3;;;10853:4:12;10841:17;;10823:36;;10890:2;10875:18;;10868:34;;;1303:7:3;;-1:-1:-1;1290:39:3;;-1:-1:-1;10796:18:12;1290:39:3;;;;;;;950:384;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:248:12:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:12;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:12:o;267:615::-;396:6;404;412;420;428;436;467:3;511:2;499:9;490:7;486:23;482:32;479:52;;;527:1;524;517:12;479:52;563:9;550:23;540:33;;620:2;609:9;605:18;592:32;582:42;;671:2;660:9;656:18;643:32;633:42;;722:2;711:9;707:18;694:32;684:42;;773:3;762:9;758:19;745:33;735:43;;813:7;808:2;797:9;793:18;790:31;787:51;;;834:1;831;824:12;787:51;;872:3;861:9;857:19;847:29;;267:615;;;;;;;;:::o;887:367::-;950:8;960:6;1014:3;1007:4;999:6;995:17;991:27;981:55;;1032:1;1029;1022:12;981:55;-1:-1:-1;1055:20:12;;1098:18;1087:30;;1084:50;;;1130:1;1127;1120:12;1084:50;1167:4;1159:6;1155:17;1143:29;;1227:3;1220:4;1210:6;1207:1;1203:14;1195:6;1191:27;1187:38;1184:47;1181:67;;;1244:1;1241;1234:12;1181:67;887:367;;;;;:::o;1259:908::-;1397:6;1405;1413;1421;1429;1437;1490:3;1478:9;1469:7;1465:23;1461:33;1458:53;;;1507:1;1504;1497:12;1458:53;1543:9;1530:23;1520:33;;1600:2;1589:9;1585:18;1572:32;1562:42;;1655:2;1644:9;1640:18;1627:32;1678:18;1719:2;1711:6;1708:14;1705:34;;;1735:1;1732;1725:12;1705:34;1774:70;1836:7;1827:6;1816:9;1812:22;1774:70;:::i;:::-;1863:8;;-1:-1:-1;1748:96:12;-1:-1:-1;1951:2:12;1936:18;;1923:32;;-1:-1:-1;1967:16:12;;;1964:36;;;1996:1;1993;1986:12;1964:36;;2035:72;2099:7;2088:8;2077:9;2073:24;2035:72;:::i;:::-;1259:908;;;;-1:-1:-1;1259:908:12;;-1:-1:-1;1259:908:12;;2126:8;;1259:908;-1:-1:-1;;;1259:908:12:o;2380:127::-;2441:10;2436:3;2432:20;2429:1;2422:31;2472:4;2469:1;2462:15;2496:4;2493:1;2486:15;2512:246;2579:2;2573:9;;;2609:15;;2654:18;2639:34;;2675:22;;;2636:62;2633:88;;;2701:18;;:::i;:::-;2737:2;2730:22;2512:246;:::o;2763:252::-;2835:2;2829:9;2877:3;2865:16;;2911:18;2896:34;;2932:22;;;2893:62;2890:88;;;2958:18;;:::i;3020:479::-;3070:5;3123:3;3116:4;3108:6;3104:17;3100:27;3090:55;;3141:1;3138;3131:12;3090:55;3165:17;;:::i;:::-;3204:3;3242:2;3234:6;3230:15;3268:3;3260:6;3257:15;3254:35;;;3285:1;3282;3275:12;3254:35;3309:6;3324:146;3340:6;3335:3;3332:15;3324:146;;;3408:17;;3396:30;;3455:4;3446:14;;;;3357;3324:146;;;-1:-1:-1;3488:5:12;;3020:479;-1:-1:-1;;;;;3020:479:12:o;3504:1397::-;3705:6;3713;3721;3729;3760:3;3804:2;3792:9;3783:7;3779:23;3775:32;3772:52;;;3820:1;3817;3810:12;3772:52;3843:44;3879:7;3868:9;3843:44;:::i;:::-;3833:54;;3906:2;3951:7;3946:2;3935:9;3931:18;3927:32;3917:60;;3973:1;3970;3963:12;3917:60;3997:17;;:::i;:::-;4036:3;4077;4066:9;4062:19;4104:7;4096:6;4093:19;4090:39;;;4125:1;4122;4115:12;4090:39;4164:2;4153:9;4149:18;4176:165;4192:6;4187:3;4184:15;4176:165;;;4258:38;4288:7;4283:3;4258:38;:::i;:::-;4246:51;;4326:4;4317:14;;;;4209:12;;4176:165;;;4180:3;4360:5;4350:15;;4384:41;4417:7;4409:6;4384:41;:::i;:::-;4374:51;;;;;;4469:7;4463:3;4452:9;4448:19;4444:33;4434:61;;4491:1;4488;4481:12;4434:61;4517:22;;:::i;:::-;4591:18;;;;4561:5;4621:21;;;4618:41;;;4655:1;4652;4645:12;4618:41;4696:3;4685:9;4681:19;4709:162;4727:8;4720:5;4717:19;4709:162;;;4803:19;;4789:34;;4856:4;4845:16;;;;4748;4709:162;;;-1:-1:-1;3504:1397:12;;;;-1:-1:-1;3504:1397:12;;-1:-1:-1;;;;3504:1397:12:o;4906:286::-;4965:6;5018:2;5006:9;4997:7;4993:23;4989:32;4986:52;;;5034:1;5031;5024:12;4986:52;5060:23;;-1:-1:-1;;;;;5112:31:12;;5102:42;;5092:70;;5158:1;5155;5148:12;5092:70;5181:5;4906:286;-1:-1:-1;;;4906:286:12:o;5197:180::-;5256:6;5309:2;5297:9;5288:7;5284:23;5280:32;5277:52;;;5325:1;5322;5315:12;5277:52;-1:-1:-1;5348:23:12;;5197:180;-1:-1:-1;5197:180:12:o;5945:156::-;6011:20;;6071:4;6060:16;;6050:27;;6040:55;;6091:1;6088;6081:12;6040:55;5945:156;;;:::o;6106:250::-;6172:6;6180;6233:2;6221:9;6212:7;6208:23;6204:32;6201:52;;;6249:1;6246;6239:12;6201:52;6285:9;6272:23;6262:33;;6314:36;6346:2;6335:9;6331:18;6314:36;:::i;:::-;6304:46;;6106:250;;;;;:::o;6660:184::-;6730:6;6783:2;6771:9;6762:7;6758:23;6754:32;6751:52;;;6799:1;6796;6789:12;6751:52;-1:-1:-1;6822:16:12;;6660:184;-1:-1:-1;6660:184:12:o;7173:127::-;7234:10;7229:3;7225:20;7222:1;7215:31;7265:4;7262:1;7255:15;7289:4;7286:1;7279:15;7305:1176;7680:6;7669:9;7662:25;7643:4;7706:2;7744:6;7739:2;7728:9;7724:18;7717:34;7787:3;7782:2;7771:9;7767:18;7760:31;7828:6;7822:3;7811:9;7807:19;7800:35;7875:1;7871;7866:3;7862:11;7858:19;7850:6;7847:31;7844:51;;;7891:1;7888;7881:12;7844:51;7925:6;7922:1;7918:14;7983:6;7975;7969:3;7958:9;7954:19;7941:49;8009:22;;8103:18;;;8059:3;8099:28;;;8094:2;8079:18;;8072:56;8051:12;;8160:19;;;8230:6;;8254:1;;8203:3;8195:12;8264:191;8278:6;8275:1;8272:13;8264:191;;;8369:4;8343:24;8360:6;8343:24;:::i;:::-;8339:35;8327:48;;8430:15;;;;8300:1;8293:9;;;;;8395:12;;8264:191;;;8472:3;7305:1176;-1:-1:-1;;;;;;;;;;;7305:1176:12:o;8739:127::-;8800:10;8795:3;8791:20;8788:1;8781:31;8831:4;8828:1;8821:15;8855:4;8852:1;8845:15;8871:125;8936:9;;;8957:10;;;8954:36;;;8970:18;;:::i;9001:128::-;9068:9;;;9089:11;;;9086:37;;;9103:18;;:::i;9134:168::-;9207:9;;;9238;;9255:15;;;9249:22;;9235:37;9225:71;;9276:18;;:::i;9307:135::-;9346:3;9367:17;;;9364:43;;9387:18;;:::i;:::-;-1:-1:-1;9434:1:12;9423:13;;9307:135::o",
      "linkReferences": {
        "lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol": {
          "IncrementalBinaryTree": [
            {
              "start": 670,
              "length": 20
            },
            {
              "start": 1218,
              "length": 20
            },
            {
              "start": 5616,
              "length": 20
            }
          ]
        }
      }
    },
    "methodIdentifiers": {
      "addMember(uint256,uint256)": "1783efc3",
      "checkValidRoot(uint256,uint256)": "e914f0e2",
      "createGroup(uint256,uint8)": "ffdad3ff",
      "getDepth(uint256)": "75e618c9",
      "getNumberOfLeaves(uint256)": "b9c78c2b",
      "getRoot(uint256)": "9b24b3b0",
      "latestRoots(uint256)": "c42044e0",
      "manager()": "481c6a75",
      "removeMember(uint256,uint256,uint256[],uint8[])": "43989f85",
      "transferAccess(address)": "66e759ee",
      "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])": "3bc778e3",
      "verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[4])": "5fe8c13b"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ExpiredRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCommitment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"depth\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"zeroValue\",\"type\":\"uint256\"}],\"name\":\"GroupCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leafIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"identityCommitment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoot\",\"type\":\"uint256\"}],\"name\":\"MemberAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"identityCommitment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"MemberAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"identityCommitment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"MemberRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"}],\"name\":\"NullifierHashAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identityCommitment\",\"type\":\"uint256\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"checkValidRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"depth\",\"type\":\"uint8\"}],\"name\":\"createGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"}],\"name\":\"getDepth\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"}],\"name\":\"getNumberOfLeaves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"}],\"name\":\"getRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"latestRoots\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identityCommitment\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"proofSiblings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"proofPathIndices\",\"type\":\"uint8[]\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"transferAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signalHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalNullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[4]\",\"name\":\"input\",\"type\":\"uint256[4]\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Miguel Piedrafita\",\"events\":{\"GroupCreated(uint256,uint8,uint256)\":{\"details\":\"Emitted when a new group is created.\",\"params\":{\"depth\":\": Depth of the tree.\",\"groupId\":\": Id of the group.\",\"zeroValue\":\": Zero value of the tree.\"}},\"MemberAdded(uint256,uint256,uint256)\":{\"details\":\"Emitted when a new identity commitment is added.\",\"params\":{\"groupId\":\": Group id of the group.\",\"identityCommitment\":\": New identity commitment.\",\"root\":\": New root hash of the tree.\"}},\"MemberRemoved(uint256,uint256,uint256)\":{\"details\":\"Emitted when a new identity commitment is removed.\",\"params\":{\"groupId\":\": Group id of the group.\",\"identityCommitment\":\": New identity commitment.\",\"root\":\": New root hash of the tree.\"}},\"NullifierHashAdded(uint256)\":{\"params\":{\"nullifierHash\":\": Hash of external and identity nullifiers.\"}}},\"kind\":\"dev\",\"methods\":{\"addMember(uint256,uint256)\":{\"params\":{\"groupId\":\"The id of the group\",\"identityCommitment\":\"The identity commitment for the new member\"}},\"checkValidRoot(uint256,uint256)\":{\"params\":{\"groupId\":\"The id of the group\",\"root\":\"The root of a given identity group\"}},\"createGroup(uint256,uint8)\":{\"params\":{\"depth\":\"The depth of the tree\",\"groupId\":\"The id of the group\"}},\"getDepth(uint256)\":{\"details\":\"See {ISemaphoreGroups-getDepth}.\"},\"getNumberOfLeaves(uint256)\":{\"details\":\"See {ISemaphoreGroups-getNumberOfLeaves}.\"},\"getRoot(uint256)\":{\"details\":\"See {ISemaphoreGroups-getRoot}.\"},\"removeMember(uint256,uint256,uint256[],uint8[])\":{\"params\":{\"groupId\":\"The id of the group\",\"identityCommitment\":\"The identity commitment for the member that'll be removed\",\"proofPathIndices\":\"The path of the proof of membership\",\"proofSiblings\":\"An array of the sibling nodes of the proof of membership\"}},\"transferAccess(address)\":{\"params\":{\"newManager\":\"The address of the new manager\"}},\"verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])\":{\"details\":\"Note that a double-signaling check is not included here, and should be carried by the caller.\",\"params\":{\"externalNullifierHash\":\"A keccak256 hash of the external nullifier\",\"groupId\":\"The id of the Semaphore group\",\"nullifierHash\":\"The nullifier hash\",\"proof\":\"The zero-knowledge proof\",\"root\":\"The of the Merkle tree\",\"signalHash\":\"A keccak256 hash of the Semaphore signal\"}},\"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[4])\":{\"details\":\"Verifies a Semaphore proof. Reverts with InvalidProof if the proof is invalid.\"}},\"stateVariables\":{\"EMPTY_LEAF\":{\"details\":\"Prevents the empty leaf from being inserted into the root history.\"},\"ROOT_HISTORY_EXPIRY\":{\"details\":\"This prevents proofs getting invalidated in the mempool by another tx modifying the group\"}},\"title\":\"Semaphore Group Manager\",\"version\":1},\"userdoc\":{\"errors\":{\"ExpiredRoot()\":[{\"notice\":\"Thrown when attempting to validate a root that has expired.\"}],\"InvalidCommitment()\":[{\"notice\":\"Thrown when trying to insert the initial leaf into a given group.\"}],\"InvalidId()\":[{\"notice\":\"Thrown when trying to create a group with id 0, since this can later cause issues with root history verification.\"}],\"InvalidRoot()\":[{\"notice\":\"Thrown when attempting to validate a root that doesn't belong to the specified group.\"}],\"NonExistentRoot()\":[{\"notice\":\"Thrown when attempting to validate a root that has yet to be added to the root history.\"}],\"Unauthorized()\":[{\"notice\":\"Thrown when trying to update or create groups without being the manager\"}]},\"events\":{\"MemberAdded(uint256,uint256,uint256,uint256)\":{\"notice\":\"EVENTS                                  ///\"},\"NullifierHashAdded(uint256)\":{\"notice\":\"Emitted when a proof is verified correctly and a new nullifier hash is added.\"}},\"kind\":\"user\",\"methods\":{\"addMember(uint256,uint256)\":{\"notice\":\"Add a new member to an existing group. Can only be called by the manager\"},\"checkValidRoot(uint256,uint256)\":{\"notice\":\"Checks if a given root value is valid and has been added to the root history\"},\"createGroup(uint256,uint8)\":{\"notice\":\"Create a new identity group. Can only be called by the manager\"},\"manager()\":{\"notice\":\"The address that manages this contract, which is allowed to update and create groups.\"},\"removeMember(uint256,uint256,uint256[],uint8[])\":{\"notice\":\"Remove a member from an existing group. Can only be called by the manager\"},\"transferAccess(address)\":{\"notice\":\"Transfer management access to a different address, or to 0x0 to renounce. Can only be called by the manager\"},\"verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])\":{\"notice\":\"Reverts if the zero-knowledge proof is invalid.\"}},\"notice\":\"A simple implementation of a ZK-based identity group manager using Semaphore\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Semaphore.sol\":\"Semaphore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@zk-kit/=lib/zk-kit/packages/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":semaphore/=lib/semaphore/contracts/\",\":zk-kit/=lib/zk-kit/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/semaphore/contracts/base/SemaphoreConstants.sol\":{\"keccak256\":\"0x3dd4c4ba76be7ddf08172dc77f423654e6e09e2c1775c4b696997054bf44f74f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8e7a0dddd241c0d9efc92e7016904a83720ca3c7a55f2aa5faf307482ef1c952\",\"dweb:/ipfs/QmTDEPhQfQipRNUPP4dpN2ZQpNYdS8CbTGVdn41kCJqijM\"]},\"lib/semaphore/contracts/base/SemaphoreCore.sol\":{\"keccak256\":\"0xc562d8689408b11af86077e661978d5571d126858a970efc5e7b220ac12d0438\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://38080f454673be568207d5c668ab2b259c19ea99807f87329f826187273e755a\",\"dweb:/ipfs/QmZEyMkb5mHCjt5Z8pxKv7AuyN7ncBr9fDWxzH84r7wYBb\"]},\"lib/semaphore/contracts/base/SemaphoreGroups.sol\":{\"keccak256\":\"0x3389e56feb5cc764a0712a81c43083979ffb1a7d9bd0c5e6a0c1daba5be39dbd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a509caa5b737a2468b4cb2bf9c56c8318c28a765af70a6d2b28199566316cf8b\",\"dweb:/ipfs/QmedCTHNdAVk3oBok8MZUn1n2KbkrwsPFzfZhCxiRrSYp4\"]},\"lib/semaphore/contracts/base/Verifier.sol\":{\"keccak256\":\"0x5db7b93bbea9f00c3c5766b4ecc7d33e612f10c721e98282b5dad10c515a6d84\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6f23486400679d4ccc7dfe0a728f0de4502711f5d60ac47a1e247f1dc981a488\",\"dweb:/ipfs/QmfN5ibyGHJMQoam6m9V6bYgNutQh2BkxDJ746RT7jBAWT\"]},\"lib/semaphore/contracts/interfaces/ISemaphoreCore.sol\":{\"keccak256\":\"0x22dc8c6af09266f1720d2e518a3a57bd8718ddc3c17013a7ccdaafbaca1cd7fe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://db0273995b53312f641a36e49434247963b16e21b70354179a7a6181194eef21\",\"dweb:/ipfs/QmdW4Ns9j9HkUr6aCAWy1oBdfAsRq48UD4o8wLPpDc7bTB\"]},\"lib/semaphore/contracts/interfaces/ISemaphoreGroups.sol\":{\"keccak256\":\"0x44ce2031a0fb5e79dd0045a93aa01ed1d0d2ca2c8456834fd16241685aabda6b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f9a12af3251c2b645008604a63bed30a44360a2ca6240c5eaa9c3181b83ff551\",\"dweb:/ipfs/QmYxpx7rj97M4qAbHQG9bcWBgPmrg9cURhZqD7xapzBMhA\"]},\"lib/semaphore/contracts/interfaces/IVerifier.sol\":{\"keccak256\":\"0x8ca1754f0a3f6c6397cf486fd82c0dd6c566c64303e45808d042ba95922ede29\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6320c0bb19264316c64e37444c79e976ded164973233ecaef8175a801b6a2fad\",\"dweb:/ipfs/QmagPryxKtzEhnaNQJGDAmogVFwFzqY9Y1hgb1vZ8XD6WV\"]},\"lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/Hashes.sol\":{\"keccak256\":\"0xfe649ff4c4e6fa50bfc9f7a8c491889a243211b7d7010e0e6be37da29f849c96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9cd0b1810a90e85b62d0314353d8216a9fd87ae88931c85ac0283473f58a97a\",\"dweb:/ipfs/QmVK2hCHiVmaUW1ksQUYci86cvkT7PBS5VkSNAGEhM2pk1\"]},\"lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol\":{\"keccak256\":\"0x41a098dd85e5ec37a2629c53f17915ad9f9c6a30382bf718e946be8e61aa054e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2b1b2e16d089b9ef623bfd93ede023d7e3f2cfedc7deb640d5703cb7bb23d6\",\"dweb:/ipfs/QmT8NcVdeXQGUQNRWREHQXvY3qnPrgdVt7bQiL3cjjCUav\"]},\"src/Semaphore.sol\":{\"keccak256\":\"0x1ca2b56a7e41ced7aa7edc41c7937065fec7da0243eca698914272726b770609\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe67a9dd698bf4dccb216537a1baf5ed3dd12ae849562e362babbdd399c28cbb\",\"dweb:/ipfs/QmYKNUhwX3rAtXELZXKWh5awTWcNZnyBdy8wJMJY8AbyzN\"]},\"src/interfaces/IWorldID.sol\":{\"keccak256\":\"0xfebbcd0951dd0c4ca4c8018a5619e24a6c70af3d72364bc7ebbd8bf74fe77a72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d57e65b766e8836789d22d5b43770a0a8d96e1090087d485c0450da5583b74d9\",\"dweb:/ipfs/QmeRursRUU4qwtK1TyJqXt8fhz5h7trxeL1sqoWCKcBHYu\"]}},\"version\":1}",
    "metadata": {
      "compiler": {
        "version": "0.8.19+commit.7dd6d404"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [],
            "type": "error",
            "name": "ExpiredRoot"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "InvalidCommitment"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "InvalidId"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "InvalidProof"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "InvalidRoot"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "NonExistentRoot"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "Unauthorized"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256",
                "indexed": true
              },
              {
                "internalType": "uint8",
                "name": "depth",
                "type": "uint8",
                "indexed": false
              },
              {
                "internalType": "uint256",
                "name": "zeroValue",
                "type": "uint256",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "GroupCreated",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256",
                "indexed": true
              },
              {
                "internalType": "uint256",
                "name": "leafIndex",
                "type": "uint256",
                "indexed": false
              },
              {
                "internalType": "uint256",
                "name": "identityCommitment",
                "type": "uint256",
                "indexed": false
              },
              {
                "internalType": "uint256",
                "name": "newRoot",
                "type": "uint256",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "MemberAdded",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256",
                "indexed": true
              },
              {
                "internalType": "uint256",
                "name": "identityCommitment",
                "type": "uint256",
                "indexed": false
              },
              {
                "internalType": "uint256",
                "name": "root",
                "type": "uint256",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "MemberAdded",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256",
                "indexed": true
              },
              {
                "internalType": "uint256",
                "name": "identityCommitment",
                "type": "uint256",
                "indexed": false
              },
              {
                "internalType": "uint256",
                "name": "root",
                "type": "uint256",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "MemberRemoved",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "nullifierHash",
                "type": "uint256",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "NullifierHashAdded",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "identityCommitment",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "addMember"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "root",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "checkValidRoot",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "depth",
                "type": "uint8"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "createGroup"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "getDepth",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "getNumberOfLeaves",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "getRoot",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "latestRoots",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "manager",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "identityCommitment",
                "type": "uint256"
              },
              {
                "internalType": "uint256[]",
                "name": "proofSiblings",
                "type": "uint256[]"
              },
              {
                "internalType": "uint8[]",
                "name": "proofPathIndices",
                "type": "uint8[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "removeMember"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newManager",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "transferAccess"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "root",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "signalHash",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "nullifierHash",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "externalNullifierHash",
                "type": "uint256"
              },
              {
                "internalType": "uint256[8]",
                "name": "proof",
                "type": "uint256[8]"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "verifyProof"
          },
          {
            "inputs": [
              {
                "internalType": "uint256[2]",
                "name": "a",
                "type": "uint256[2]"
              },
              {
                "internalType": "uint256[2][2]",
                "name": "b",
                "type": "uint256[2][2]"
              },
              {
                "internalType": "uint256[2]",
                "name": "c",
                "type": "uint256[2]"
              },
              {
                "internalType": "uint256[4]",
                "name": "input",
                "type": "uint256[4]"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "verifyProof"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {
            "addMember(uint256,uint256)": {
              "params": {
                "groupId": "The id of the group",
                "identityCommitment": "The identity commitment for the new member"
              }
            },
            "checkValidRoot(uint256,uint256)": {
              "params": {
                "groupId": "The id of the group",
                "root": "The root of a given identity group"
              }
            },
            "createGroup(uint256,uint8)": {
              "params": {
                "depth": "The depth of the tree",
                "groupId": "The id of the group"
              }
            },
            "getDepth(uint256)": {
              "details": "See {ISemaphoreGroups-getDepth}."
            },
            "getNumberOfLeaves(uint256)": {
              "details": "See {ISemaphoreGroups-getNumberOfLeaves}."
            },
            "getRoot(uint256)": {
              "details": "See {ISemaphoreGroups-getRoot}."
            },
            "removeMember(uint256,uint256,uint256[],uint8[])": {
              "params": {
                "groupId": "The id of the group",
                "identityCommitment": "The identity commitment for the member that'll be removed",
                "proofPathIndices": "The path of the proof of membership",
                "proofSiblings": "An array of the sibling nodes of the proof of membership"
              }
            },
            "transferAccess(address)": {
              "params": {
                "newManager": "The address of the new manager"
              }
            },
            "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])": {
              "details": "Note that a double-signaling check is not included here, and should be carried by the caller.",
              "params": {
                "externalNullifierHash": "A keccak256 hash of the external nullifier",
                "groupId": "The id of the Semaphore group",
                "nullifierHash": "The nullifier hash",
                "proof": "The zero-knowledge proof",
                "root": "The of the Merkle tree",
                "signalHash": "A keccak256 hash of the Semaphore signal"
              }
            },
            "verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[4])": {
              "details": "Verifies a Semaphore proof. Reverts with InvalidProof if the proof is invalid."
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "addMember(uint256,uint256)": {
              "notice": "Add a new member to an existing group. Can only be called by the manager"
            },
            "checkValidRoot(uint256,uint256)": {
              "notice": "Checks if a given root value is valid and has been added to the root history"
            },
            "createGroup(uint256,uint8)": {
              "notice": "Create a new identity group. Can only be called by the manager"
            },
            "manager()": {
              "notice": "The address that manages this contract, which is allowed to update and create groups."
            },
            "removeMember(uint256,uint256,uint256[],uint8[])": {
              "notice": "Remove a member from an existing group. Can only be called by the manager"
            },
            "transferAccess(address)": {
              "notice": "Transfer management access to a different address, or to 0x0 to renounce. Can only be called by the manager"
            },
            "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])": {
              "notice": "Reverts if the zero-knowledge proof is invalid."
            }
          },
          "version": 1
        }
      },
      "settings": {
        "remappings": [
          ":@openzeppelin/=lib/openzeppelin-contracts/",
          ":@zk-kit/=lib/zk-kit/packages/",
          ":ds-test/=lib/forge-std/lib/ds-test/src/",
          ":forge-std/=lib/forge-std/src/",
          ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
          ":semaphore/=lib/semaphore/contracts/",
          ":zk-kit/=lib/zk-kit/"
        ],
        "optimizer": {
          "enabled": true,
          "runs": 200
        },
        "metadata": {
          "bytecodeHash": "ipfs"
        },
        "compilationTarget": {
          "src/Semaphore.sol": "Semaphore"
        },
        "libraries": {}
      },
      "sources": {
        "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
          "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
          "urls": [
            "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
            "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
          ],
          "license": "MIT"
        },
        "lib/semaphore/contracts/base/SemaphoreConstants.sol": {
          "keccak256": "0x3dd4c4ba76be7ddf08172dc77f423654e6e09e2c1775c4b696997054bf44f74f",
          "urls": [
            "bzz-raw://8e7a0dddd241c0d9efc92e7016904a83720ca3c7a55f2aa5faf307482ef1c952",
            "dweb:/ipfs/QmTDEPhQfQipRNUPP4dpN2ZQpNYdS8CbTGVdn41kCJqijM"
          ],
          "license": "GPL-3.0"
        },
        "lib/semaphore/contracts/base/SemaphoreCore.sol": {
          "keccak256": "0xc562d8689408b11af86077e661978d5571d126858a970efc5e7b220ac12d0438",
          "urls": [
            "bzz-raw://38080f454673be568207d5c668ab2b259c19ea99807f87329f826187273e755a",
            "dweb:/ipfs/QmZEyMkb5mHCjt5Z8pxKv7AuyN7ncBr9fDWxzH84r7wYBb"
          ],
          "license": "GPL-3.0"
        },
        "lib/semaphore/contracts/base/SemaphoreGroups.sol": {
          "keccak256": "0x3389e56feb5cc764a0712a81c43083979ffb1a7d9bd0c5e6a0c1daba5be39dbd",
          "urls": [
            "bzz-raw://a509caa5b737a2468b4cb2bf9c56c8318c28a765af70a6d2b28199566316cf8b",
            "dweb:/ipfs/QmedCTHNdAVk3oBok8MZUn1n2KbkrwsPFzfZhCxiRrSYp4"
          ],
          "license": "GPL-3.0"
        },
        "lib/semaphore/contracts/base/Verifier.sol": {
          "keccak256": "0x5db7b93bbea9f00c3c5766b4ecc7d33e612f10c721e98282b5dad10c515a6d84",
          "urls": [
            "bzz-raw://6f23486400679d4ccc7dfe0a728f0de4502711f5d60ac47a1e247f1dc981a488",
            "dweb:/ipfs/QmfN5ibyGHJMQoam6m9V6bYgNutQh2BkxDJ746RT7jBAWT"
          ],
          "license": "GPL-3.0"
        },
        "lib/semaphore/contracts/interfaces/ISemaphoreCore.sol": {
          "keccak256": "0x22dc8c6af09266f1720d2e518a3a57bd8718ddc3c17013a7ccdaafbaca1cd7fe",
          "urls": [
            "bzz-raw://db0273995b53312f641a36e49434247963b16e21b70354179a7a6181194eef21",
            "dweb:/ipfs/QmdW4Ns9j9HkUr6aCAWy1oBdfAsRq48UD4o8wLPpDc7bTB"
          ],
          "license": "GPL-3.0"
        },
        "lib/semaphore/contracts/interfaces/ISemaphoreGroups.sol": {
          "keccak256": "0x44ce2031a0fb5e79dd0045a93aa01ed1d0d2ca2c8456834fd16241685aabda6b",
          "urls": [
            "bzz-raw://f9a12af3251c2b645008604a63bed30a44360a2ca6240c5eaa9c3181b83ff551",
            "dweb:/ipfs/QmYxpx7rj97M4qAbHQG9bcWBgPmrg9cURhZqD7xapzBMhA"
          ],
          "license": "GPL-3.0"
        },
        "lib/semaphore/contracts/interfaces/IVerifier.sol": {
          "keccak256": "0x8ca1754f0a3f6c6397cf486fd82c0dd6c566c64303e45808d042ba95922ede29",
          "urls": [
            "bzz-raw://6320c0bb19264316c64e37444c79e976ded164973233ecaef8175a801b6a2fad",
            "dweb:/ipfs/QmagPryxKtzEhnaNQJGDAmogVFwFzqY9Y1hgb1vZ8XD6WV"
          ],
          "license": "GPL-3.0"
        },
        "lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/Hashes.sol": {
          "keccak256": "0xfe649ff4c4e6fa50bfc9f7a8c491889a243211b7d7010e0e6be37da29f849c96",
          "urls": [
            "bzz-raw://d9cd0b1810a90e85b62d0314353d8216a9fd87ae88931c85ac0283473f58a97a",
            "dweb:/ipfs/QmVK2hCHiVmaUW1ksQUYci86cvkT7PBS5VkSNAGEhM2pk1"
          ],
          "license": "MIT"
        },
        "lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol": {
          "keccak256": "0x41a098dd85e5ec37a2629c53f17915ad9f9c6a30382bf718e946be8e61aa054e",
          "urls": [
            "bzz-raw://8f2b1b2e16d089b9ef623bfd93ede023d7e3f2cfedc7deb640d5703cb7bb23d6",
            "dweb:/ipfs/QmT8NcVdeXQGUQNRWREHQXvY3qnPrgdVt7bQiL3cjjCUav"
          ],
          "license": "MIT"
        },
        "src/Semaphore.sol": {
          "keccak256": "0x1ca2b56a7e41ced7aa7edc41c7937065fec7da0243eca698914272726b770609",
          "urls": [
            "bzz-raw://fe67a9dd698bf4dccb216537a1baf5ed3dd12ae849562e362babbdd399c28cbb",
            "dweb:/ipfs/QmYKNUhwX3rAtXELZXKWh5awTWcNZnyBdy8wJMJY8AbyzN"
          ],
          "license": "MIT"
        },
        "src/interfaces/IWorldID.sol": {
          "keccak256": "0xfebbcd0951dd0c4ca4c8018a5619e24a6c70af3d72364bc7ebbd8bf74fe77a72",
          "urls": [
            "bzz-raw://d57e65b766e8836789d22d5b43770a0a8d96e1090087d485c0450da5583b74d9",
            "dweb:/ipfs/QmeRursRUU4qwtK1TyJqXt8fhz5h7trxeL1sqoWCKcBHYu"
          ],
          "license": "MIT"
        }
      },
      "version": 1
    },
    "ast": {
      "absolutePath": "src/Semaphore.sol",
      "id": 2102,
      "exportedSymbols": {
        "IWorldID": [
          2122
        ],
        "IncrementalBinaryTree": [
          1706
        ],
        "IncrementalTreeData": [
          1289
        ],
        "Semaphore": [
          2101
        ],
        "SemaphoreCore": [
          146
        ],
        "SemaphoreGroups": [
          337
        ],
        "Verifier": [
          1155
        ]
      },
      "nodeType": "SourceUnit",
      "src": "32:9299:10",
      "nodes": [
        {
          "id": 1708,
          "nodeType": "PragmaDirective",
          "src": "32:24:10",
          "nodes": [],
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".10"
          ]
        },
        {
          "id": 1710,
          "nodeType": "ImportDirective",
          "src": "58:53:10",
          "nodes": [],
          "absolutePath": "lib/semaphore/contracts/base/Verifier.sol",
          "file": "semaphore/base/Verifier.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 2102,
          "sourceUnit": 1156,
          "symbolAliases": [
            {
              "foreign": {
                "id": 1709,
                "name": "Verifier",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1155,
                "src": "66:8:10",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 1712,
          "nodeType": "ImportDirective",
          "src": "112:51:10",
          "nodes": [],
          "absolutePath": "src/interfaces/IWorldID.sol",
          "file": "./interfaces/IWorldID.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 2102,
          "sourceUnit": 2123,
          "symbolAliases": [
            {
              "foreign": {
                "id": 1711,
                "name": "IWorldID",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2122,
                "src": "120:8:10",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 1714,
          "nodeType": "ImportDirective",
          "src": "164:63:10",
          "nodes": [],
          "absolutePath": "lib/semaphore/contracts/base/SemaphoreCore.sol",
          "file": "semaphore/base/SemaphoreCore.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 2102,
          "sourceUnit": 147,
          "symbolAliases": [
            {
              "foreign": {
                "id": 1713,
                "name": "SemaphoreCore",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 146,
                "src": "172:13:10",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 1716,
          "nodeType": "ImportDirective",
          "src": "228:67:10",
          "nodes": [],
          "absolutePath": "lib/semaphore/contracts/base/SemaphoreGroups.sol",
          "file": "semaphore/base/SemaphoreGroups.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 2102,
          "sourceUnit": 338,
          "symbolAliases": [
            {
              "foreign": {
                "id": 1715,
                "name": "SemaphoreGroups",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 337,
                "src": "236:15:10",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 1719,
          "nodeType": "ImportDirective",
          "src": "296:131:10",
          "nodes": [],
          "absolutePath": "lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol",
          "file": "@zk-kit/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 2102,
          "sourceUnit": 1707,
          "symbolAliases": [
            {
              "foreign": {
                "id": 1717,
                "name": "IncrementalBinaryTree",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1706,
                "src": "304:21:10",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            },
            {
              "foreign": {
                "id": 1718,
                "name": "IncrementalTreeData",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1289,
                "src": "327:19:10",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 2101,
          "nodeType": "ContractDefinition",
          "src": "583:8747:10",
          "nodes": [
            {
              "id": 1732,
              "nodeType": "UsingForDirective",
              "src": "662:52:10",
              "nodes": [],
              "global": false,
              "libraryName": {
                "id": 1729,
                "name": "IncrementalBinaryTree",
                "nameLocations": [
                  "668:21:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1706,
                "src": "668:21:10"
              },
              "typeName": {
                "id": 1731,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1730,
                  "name": "IncrementalTreeData",
                  "nameLocations": [
                    "694:19:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1289,
                  "src": "694:19:10"
                },
                "referencedDeclaration": 1289,
                "src": "694:19:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_IncrementalTreeData_$1289_storage_ptr",
                  "typeString": "struct IncrementalTreeData"
                }
              }
            },
            {
              "id": 1735,
              "nodeType": "ErrorDefinition",
              "src": "1060:21:10",
              "nodes": [],
              "documentation": {
                "id": 1733,
                "nodeType": "StructuredDocumentation",
                "src": "972:83:10",
                "text": "@notice Thrown when trying to update or create groups without being the manager"
              },
              "errorSelector": "82b42900",
              "name": "Unauthorized",
              "nameLocation": "1066:12:10",
              "parameters": {
                "id": 1734,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1078:2:10"
              }
            },
            {
              "id": 1738,
              "nodeType": "ErrorDefinition",
              "src": "1217:18:10",
              "nodes": [],
              "documentation": {
                "id": 1736,
                "nodeType": "StructuredDocumentation",
                "src": "1087:125:10",
                "text": "@notice Thrown when trying to create a group with id 0, since this can later cause issues with root history verification."
              },
              "errorSelector": "dfa1a408",
              "name": "InvalidId",
              "nameLocation": "1223:9:10",
              "parameters": {
                "id": 1737,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1232:2:10"
              }
            },
            {
              "id": 1741,
              "nodeType": "ErrorDefinition",
              "src": "1343:20:10",
              "nodes": [],
              "documentation": {
                "id": 1739,
                "nodeType": "StructuredDocumentation",
                "src": "1241:97:10",
                "text": "@notice Thrown when attempting to validate a root that doesn't belong to the specified group."
              },
              "errorSelector": "504570e3",
              "name": "InvalidRoot",
              "nameLocation": "1349:11:10",
              "parameters": {
                "id": 1740,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1360:2:10"
              }
            },
            {
              "id": 1744,
              "nodeType": "ErrorDefinition",
              "src": "1445:20:10",
              "nodes": [],
              "documentation": {
                "id": 1742,
                "nodeType": "StructuredDocumentation",
                "src": "1369:71:10",
                "text": "@notice Thrown when attempting to validate a root that has expired."
              },
              "errorSelector": "3ae7359e",
              "name": "ExpiredRoot",
              "nameLocation": "1451:11:10",
              "parameters": {
                "id": 1743,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1462:2:10"
              }
            },
            {
              "id": 1747,
              "nodeType": "ErrorDefinition",
              "src": "1575:24:10",
              "nodes": [],
              "documentation": {
                "id": 1745,
                "nodeType": "StructuredDocumentation",
                "src": "1471:99:10",
                "text": "@notice Thrown when attempting to validate a root that has yet to be added to the root history."
              },
              "errorSelector": "ddae3b71",
              "name": "NonExistentRoot",
              "nameLocation": "1581:15:10",
              "parameters": {
                "id": 1746,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1596:2:10"
              }
            },
            {
              "id": 1750,
              "nodeType": "ErrorDefinition",
              "src": "1687:26:10",
              "nodes": [],
              "documentation": {
                "id": 1748,
                "nodeType": "StructuredDocumentation",
                "src": "1605:77:10",
                "text": "@notice Thrown when trying to insert the initial leaf into a given group."
              },
              "errorSelector": "c06789fa",
              "name": "InvalidCommitment",
              "nameLocation": "1693:17:10",
              "parameters": {
                "id": 1749,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1710:2:10"
              }
            },
            {
              "id": 1755,
              "nodeType": "StructDefinition",
              "src": "2187:78:10",
              "nodes": [],
              "canonicalName": "Semaphore.RootHistory",
              "members": [
                {
                  "constant": false,
                  "id": 1752,
                  "mutability": "mutable",
                  "name": "groupId",
                  "nameLocation": "2224:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1755,
                  "src": "2216:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1751,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2216:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1754,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2249:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1755,
                  "src": "2241:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1753,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "RootHistory",
              "nameLocation": "2194:11:10",
              "scope": 2101,
              "visibility": "public"
            },
            {
              "id": 1759,
              "nodeType": "VariableDeclaration",
              "src": "2712:55:10",
              "nodes": [],
              "constant": true,
              "documentation": {
                "id": 1756,
                "nodeType": "StructuredDocumentation",
                "src": "2522:185:10",
                "text": "@notice The amount of time an outdated root for a group is considered as valid\n @dev This prevents proofs getting invalidated in the mempool by another tx modifying the group"
              },
              "mutability": "constant",
              "name": "ROOT_HISTORY_EXPIRY",
              "nameLocation": "2738:19:10",
              "scope": 2101,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1757,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2712:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "31",
                "id": 1758,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2760:7:10",
                "subdenomination": "hours",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3600_by_1",
                  "typeString": "int_const 3600"
                },
                "value": "1"
              },
              "visibility": "internal"
            },
            {
              "id": 1766,
              "nodeType": "VariableDeclaration",
              "src": "2922:49:10",
              "nodes": [],
              "constant": true,
              "documentation": {
                "id": 1760,
                "nodeType": "StructuredDocumentation",
                "src": "2774:143:10",
                "text": "@notice Represents the initial leaf in an empty merkle tree\n @dev Prevents the empty leaf from being inserted into the root history."
              },
              "mutability": "constant",
              "name": "EMPTY_LEAF",
              "nameLocation": "2948:10:10",
              "scope": 2101,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1761,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2922:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "arguments": [
                  {
                    "hexValue": "30",
                    "id": 1764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2969:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    }
                  ],
                  "id": 1763,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "ElementaryTypeNameExpression",
                  "src": "2961:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_uint256_$",
                    "typeString": "type(uint256)"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:7:10",
                    "typeDescriptions": {}
                  }
                },
                "id": 1765,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "nameLocations": [],
                "names": [],
                "nodeType": "FunctionCall",
                "src": "2961:10:10",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            },
            {
              "id": 1771,
              "nodeType": "VariableDeclaration",
              "src": "3080:35:10",
              "nodes": [],
              "constant": false,
              "documentation": {
                "id": 1767,
                "nodeType": "StructuredDocumentation",
                "src": "2978:97:10",
                "text": "@notice The address that manages this contract, which is allowed to update and create groups."
              },
              "functionSelector": "481c6a75",
              "mutability": "mutable",
              "name": "manager",
              "nameLocation": "3095:7:10",
              "scope": 2101,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 1768,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3080:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "value": {
                "expression": {
                  "id": 1769,
                  "name": "msg",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -15,
                  "src": "3105:3:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_magic_message",
                    "typeString": "msg"
                  }
                },
                "id": 1770,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "3109:6:10",
                "memberName": "sender",
                "nodeType": "MemberAccess",
                "src": "3105:10:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "id": 1776,
              "nodeType": "VariableDeclaration",
              "src": "3122:52:10",
              "nodes": [],
              "constant": false,
              "mutability": "mutable",
              "name": "rootHistory",
              "nameLocation": "3163:11:10",
              "scope": 2101,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RootHistory_$1755_storage_$",
                "typeString": "mapping(uint256 => struct Semaphore.RootHistory)"
              },
              "typeName": {
                "id": 1775,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 1772,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3130:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "3122:31:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RootHistory_$1755_storage_$",
                  "typeString": "mapping(uint256 => struct Semaphore.RootHistory)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 1774,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1773,
                    "name": "RootHistory",
                    "nameLocations": [
                      "3141:11:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1755,
                    "src": "3141:11:10"
                  },
                  "referencedDeclaration": 1755,
                  "src": "3141:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RootHistory_$1755_storage_ptr",
                    "typeString": "struct Semaphore.RootHistory"
                  }
                }
              },
              "visibility": "internal"
            },
            {
              "id": 1780,
              "nodeType": "VariableDeclaration",
              "src": "3181:46:10",
              "nodes": [],
              "constant": false,
              "functionSelector": "c42044e0",
              "mutability": "mutable",
              "name": "latestRoots",
              "nameLocation": "3216:11:10",
              "scope": 2101,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "typeName": {
                "id": 1779,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 1777,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3189:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "3181:27:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 1778,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3200:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              },
              "visibility": "public"
            },
            {
              "id": 1791,
              "nodeType": "EventDefinition",
              "src": "3485:145:10",
              "nodes": [],
              "anonymous": false,
              "documentation": {
                "id": 1781,
                "nodeType": "StructuredDocumentation",
                "src": "3318:78:10",
                "text": "EVENTS                                  ///"
              },
              "eventSelector": "19239b3f93cd10558aaf11423af70c77763bf54f52bcc75bfa74d4d13548cde9",
              "name": "MemberAdded",
              "nameLocation": "3491:11:10",
              "parameters": {
                "id": 1790,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1783,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "groupId",
                    "nameLocation": "3528:7:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1791,
                    "src": "3512:23:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1782,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3512:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1785,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "leafIndex",
                    "nameLocation": "3553:9:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1791,
                    "src": "3545:17:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1784,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3545:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1787,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "identityCommitment",
                    "nameLocation": "3580:18:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1791,
                    "src": "3572:26:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1786,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3572:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1789,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "newRoot",
                    "nameLocation": "3616:7:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1791,
                    "src": "3608:15:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1788,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3608:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3502:127:10"
              }
            },
            {
              "id": 1814,
              "nodeType": "FunctionDefinition",
              "src": "4052:174:10",
              "nodes": [],
              "body": {
                "id": 1813,
                "nodeType": "Block",
                "src": "4110:116:10",
                "nodes": [],
                "statements": [
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1799,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4124:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4128:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4124:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 1801,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1771,
                        "src": "4138:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4124:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1806,
                    "nodeType": "IfStatement",
                    "src": "4120:48:10",
                    "trueBody": {
                      "errorCall": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1803,
                          "name": "Unauthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1735,
                          "src": "4154:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4154:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1805,
                      "nodeType": "RevertStatement",
                      "src": "4147:21:10"
                    }
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1808,
                          "name": "groupId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1794,
                          "src": "4192:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1809,
                          "name": "depth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1796,
                          "src": "4201:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 1810,
                          "name": "EMPTY_LEAF",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1766,
                          "src": "4208:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1807,
                        "name": "_createGroup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "4179:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint8_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint8,uint256)"
                        }
                      },
                      "id": 1811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4179:40:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1812,
                    "nodeType": "ExpressionStatement",
                    "src": "4179:40:10"
                  }
                ]
              },
              "documentation": {
                "id": 1792,
                "nodeType": "StructuredDocumentation",
                "src": "3887:160:10",
                "text": "@notice Create a new identity group. Can only be called by the manager\n @param groupId The id of the group\n @param depth The depth of the tree"
              },
              "functionSelector": "ffdad3ff",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "createGroup",
              "nameLocation": "4061:11:10",
              "parameters": {
                "id": 1797,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1794,
                    "mutability": "mutable",
                    "name": "groupId",
                    "nameLocation": "4081:7:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1814,
                    "src": "4073:15:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1793,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4073:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1796,
                    "mutability": "mutable",
                    "name": "depth",
                    "nameLocation": "4096:5:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1814,
                    "src": "4090:11:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 1795,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "4090:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4072:30:10"
              },
              "returnParameters": {
                "id": 1798,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "4110:0:10"
              },
              "scope": 2101,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 1882,
              "nodeType": "FunctionDefinition",
              "src": "4441:578:10",
              "nodes": [],
              "body": {
                "id": 1881,
                "nodeType": "Block",
                "src": "4512:507:10",
                "nodes": [],
                "statements": [
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1822,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4526:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4530:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4526:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 1824,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1771,
                        "src": "4540:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4526:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1829,
                    "nodeType": "IfStatement",
                    "src": "4522:48:10",
                    "trueBody": {
                      "errorCall": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1826,
                          "name": "Unauthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1735,
                          "src": "4556:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4556:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1828,
                      "nodeType": "RevertStatement",
                      "src": "4549:21:10"
                    }
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1830,
                        "name": "identityCommitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1819,
                        "src": "4585:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1831,
                        "name": "EMPTY_LEAF",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1766,
                        "src": "4607:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4585:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1836,
                    "nodeType": "IfStatement",
                    "src": "4581:64:10",
                    "trueBody": {
                      "errorCall": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1833,
                          "name": "InvalidCommitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1750,
                          "src": "4626:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4626:19:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1835,
                      "nodeType": "RevertStatement",
                      "src": "4619:26:10"
                    }
                  },
                  {
                    "assignments": [
                      1838
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1838,
                        "mutability": "mutable",
                        "name": "leafIndex",
                        "nameLocation": "4664:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1881,
                        "src": "4656:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1837,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4656:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1845,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 1843,
                          "name": "identityCommitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1819,
                          "src": "4699:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1839,
                            "name": "groups",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "4676:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IncrementalTreeData_$1289_storage_$",
                              "typeString": "mapping(uint256 => struct IncrementalTreeData storage ref)"
                            }
                          },
                          "id": 1841,
                          "indexExpression": {
                            "id": 1840,
                            "name": "groupId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "4683:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4676:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncrementalTreeData_$1289_storage",
                            "typeString": "struct IncrementalTreeData storage ref"
                          }
                        },
                        "id": 1842,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4692:6:10",
                        "memberName": "insert",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1478,
                        "src": "4676:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_IncrementalTreeData_$1289_storage_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_struct$_IncrementalTreeData_$1289_storage_ptr_$",
                          "typeString": "function (struct IncrementalTreeData storage pointer,uint256) returns (uint256)"
                        }
                      },
                      "id": 1844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4676:42:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4656:62:10"
                  },
                  {
                    "assignments": [
                      1847
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1847,
                        "mutability": "mutable",
                        "name": "root",
                        "nameLocation": "4737:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1881,
                        "src": "4729:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1846,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4729:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1851,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 1849,
                          "name": "groupId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1817,
                          "src": "4752:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1848,
                        "name": "getRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "4744:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 1850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4744:16:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4729:31:10"
                  },
                  {
                    "expression": {
                      "id": 1866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 1852,
                          "name": "rootHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "4770:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RootHistory_$1755_storage_$",
                            "typeString": "mapping(uint256 => struct Semaphore.RootHistory storage ref)"
                          }
                        },
                        "id": 1854,
                        "indexExpression": {
                          "id": 1853,
                          "name": "root",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1847,
                          "src": "4782:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "4770:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RootHistory_$1755_storage",
                          "typeString": "struct Semaphore.RootHistory storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1858,
                                "name": "groupId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1817,
                                "src": "4833:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4825:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 1856,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "4825:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4825:16:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1862,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4874:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4880:9:10",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4874:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4866:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 1860,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "4866:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4866:24:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 1855,
                          "name": "RootHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1755,
                          "src": "4790:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_RootHistory_$1755_storage_ptr_$",
                            "typeString": "type(struct Semaphore.RootHistory storage pointer)"
                          }
                        },
                        "id": 1865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "4816:7:10",
                          "4855:9:10"
                        ],
                        "names": [
                          "groupId",
                          "timestamp"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "4790:111:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RootHistory_$1755_memory_ptr",
                          "typeString": "struct Semaphore.RootHistory memory"
                        }
                      },
                      "src": "4770:131:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RootHistory_$1755_storage",
                        "typeString": "struct Semaphore.RootHistory storage ref"
                      }
                    },
                    "id": 1867,
                    "nodeType": "ExpressionStatement",
                    "src": "4770:131:10"
                  },
                  {
                    "expression": {
                      "id": 1872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 1868,
                          "name": "latestRoots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1780,
                          "src": "4912:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1870,
                        "indexExpression": {
                          "id": 1869,
                          "name": "groupId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1817,
                          "src": "4924:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "4912:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1871,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1847,
                        "src": "4935:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4912:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1873,
                    "nodeType": "ExpressionStatement",
                    "src": "4912:27:10"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 1875,
                          "name": "groupId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1817,
                          "src": "4967:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1876,
                          "name": "leafIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1838,
                          "src": "4976:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1877,
                          "name": "identityCommitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1819,
                          "src": "4987:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1878,
                          "name": "root",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1847,
                          "src": "5007:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1874,
                        "name": "MemberAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1791,
                          1185
                        ],
                        "referencedDeclaration": 1791,
                        "src": "4955:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 1879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4955:57:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1880,
                    "nodeType": "EmitStatement",
                    "src": "4950:62:10"
                  }
                ]
              },
              "documentation": {
                "id": 1815,
                "nodeType": "StructuredDocumentation",
                "src": "4232:204:10",
                "text": "@notice Add a new member to an existing group. Can only be called by the manager\n @param groupId The id of the group\n @param identityCommitment The identity commitment for the new member"
              },
              "functionSelector": "1783efc3",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "addMember",
              "nameLocation": "4450:9:10",
              "parameters": {
                "id": 1820,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1817,
                    "mutability": "mutable",
                    "name": "groupId",
                    "nameLocation": "4468:7:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1882,
                    "src": "4460:15:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1816,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4460:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1819,
                    "mutability": "mutable",
                    "name": "identityCommitment",
                    "nameLocation": "4485:18:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1882,
                    "src": "4477:26:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1818,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4477:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4459:45:10"
              },
              "returnParameters": {
                "id": 1821,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "4512:0:10"
              },
              "scope": 2101,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 1960,
              "nodeType": "FunctionDefinition",
              "src": "5404:735:10",
              "nodes": [],
              "body": {
                "id": 1959,
                "nodeType": "Block",
                "src": "5585:554:10",
                "nodes": [],
                "statements": [
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1896,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5599:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5603:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5599:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 1898,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1771,
                        "src": "5613:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5599:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1903,
                    "nodeType": "IfStatement",
                    "src": "5595:48:10",
                    "trueBody": {
                      "errorCall": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1900,
                          "name": "Unauthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1735,
                          "src": "5629:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5629:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1902,
                      "nodeType": "RevertStatement",
                      "src": "5622:21:10"
                    }
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 1908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1905,
                            "name": "groupId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1885,
                            "src": "5666:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1904,
                          "name": "getDepth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "5657:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                            "typeString": "function (uint256) view returns (uint8)"
                          }
                        },
                        "id": 1906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5657:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5678:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5657:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1912,
                    "nodeType": "IfStatement",
                    "src": "5653:46:10",
                    "trueBody": {
                      "errorCall": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1909,
                          "name": "InvalidId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1738,
                          "src": "5688:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5688:11:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1911,
                      "nodeType": "RevertStatement",
                      "src": "5681:18:10"
                    }
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1917,
                          "name": "identityCommitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1887,
                          "src": "5746:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1918,
                          "name": "proofSiblings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1890,
                          "src": "5778:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "id": 1919,
                          "name": "proofPathIndices",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1893,
                          "src": "5805:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                            "typeString": "uint8[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                            "typeString": "uint8[] calldata"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1913,
                            "name": "groups",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "5710:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IncrementalTreeData_$1289_storage_$",
                              "typeString": "mapping(uint256 => struct IncrementalTreeData storage ref)"
                            }
                          },
                          "id": 1915,
                          "indexExpression": {
                            "id": 1914,
                            "name": "groupId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1885,
                            "src": "5717:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5710:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncrementalTreeData_$1289_storage",
                            "typeString": "struct IncrementalTreeData storage ref"
                          }
                        },
                        "id": 1916,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5726:6:10",
                        "memberName": "remove",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "5710:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_IncrementalTreeData_$1289_storage_ptr_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$returns$__$attached_to$_t_struct$_IncrementalTreeData_$1289_storage_ptr_$",
                          "typeString": "function (struct IncrementalTreeData storage pointer,uint256,uint256[] memory,uint8[] memory)"
                        }
                      },
                      "id": 1920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5710:121:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1921,
                    "nodeType": "ExpressionStatement",
                    "src": "5710:121:10"
                  },
                  {
                    "assignments": [
                      1923
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1923,
                        "mutability": "mutable",
                        "name": "root",
                        "nameLocation": "5850:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1959,
                        "src": "5842:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1922,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5842:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1927,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 1925,
                          "name": "groupId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1885,
                          "src": "5865:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1924,
                        "name": "getRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "5857:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 1926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5857:16:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5842:31:10"
                  },
                  {
                    "expression": {
                      "id": 1942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 1928,
                          "name": "rootHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "5883:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RootHistory_$1755_storage_$",
                            "typeString": "mapping(uint256 => struct Semaphore.RootHistory storage ref)"
                          }
                        },
                        "id": 1930,
                        "indexExpression": {
                          "id": 1929,
                          "name": "root",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1923,
                          "src": "5895:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "5883:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RootHistory_$1755_storage",
                          "typeString": "struct Semaphore.RootHistory storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1934,
                                "name": "groupId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1885,
                                "src": "5946:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5938:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 1932,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "5938:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5938:16:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1938,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5987:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5993:9:10",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5987:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5979:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 1936,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "5979:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5979:24:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 1931,
                          "name": "RootHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1755,
                          "src": "5903:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_RootHistory_$1755_storage_ptr_$",
                            "typeString": "type(struct Semaphore.RootHistory storage pointer)"
                          }
                        },
                        "id": 1941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "5929:7:10",
                          "5968:9:10"
                        ],
                        "names": [
                          "groupId",
                          "timestamp"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "5903:111:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RootHistory_$1755_memory_ptr",
                          "typeString": "struct Semaphore.RootHistory memory"
                        }
                      },
                      "src": "5883:131:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RootHistory_$1755_storage",
                        "typeString": "struct Semaphore.RootHistory storage ref"
                      }
                    },
                    "id": 1943,
                    "nodeType": "ExpressionStatement",
                    "src": "5883:131:10"
                  },
                  {
                    "expression": {
                      "id": 1948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 1944,
                          "name": "latestRoots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1780,
                          "src": "6025:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1946,
                        "indexExpression": {
                          "id": 1945,
                          "name": "groupId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1885,
                          "src": "6037:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "6025:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1947,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1923,
                        "src": "6048:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6025:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1949,
                    "nodeType": "ExpressionStatement",
                    "src": "6025:27:10"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 1951,
                          "name": "groupId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1885,
                          "src": "6082:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1952,
                          "name": "identityCommitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1887,
                          "src": "6091:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 1953,
                              "name": "groups",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "6111:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IncrementalTreeData_$1289_storage_$",
                                "typeString": "mapping(uint256 => struct IncrementalTreeData storage ref)"
                              }
                            },
                            "id": 1955,
                            "indexExpression": {
                              "id": 1954,
                              "name": "groupId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1885,
                              "src": "6118:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6111:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IncrementalTreeData_$1289_storage",
                              "typeString": "struct IncrementalTreeData storage ref"
                            }
                          },
                          "id": 1956,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6127:4:10",
                          "memberName": "root",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1276,
                          "src": "6111:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1950,
                        "name": "MemberRemoved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1194,
                        "src": "6068:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256,uint256)"
                        }
                      },
                      "id": 1957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6068:64:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1958,
                    "nodeType": "EmitStatement",
                    "src": "6063:69:10"
                  }
                ]
              },
              "documentation": {
                "id": 1883,
                "nodeType": "StructuredDocumentation",
                "src": "5025:374:10",
                "text": "@notice Remove a member from an existing group. Can only be called by the manager\n @param groupId The id of the group\n @param identityCommitment The identity commitment for the member that'll be removed\n @param proofSiblings An array of the sibling nodes of the proof of membership\n @param proofPathIndices The path of the proof of membership"
              },
              "functionSelector": "43989f85",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "removeMember",
              "nameLocation": "5413:12:10",
              "parameters": {
                "id": 1894,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1885,
                    "mutability": "mutable",
                    "name": "groupId",
                    "nameLocation": "5443:7:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1960,
                    "src": "5435:15:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1884,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5435:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1887,
                    "mutability": "mutable",
                    "name": "identityCommitment",
                    "nameLocation": "5468:18:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1960,
                    "src": "5460:26:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1886,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5460:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1890,
                    "mutability": "mutable",
                    "name": "proofSiblings",
                    "nameLocation": "5515:13:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1960,
                    "src": "5496:32:10",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                      "typeString": "uint256[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 1888,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5496:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1889,
                      "nodeType": "ArrayTypeName",
                      "src": "5496:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1893,
                    "mutability": "mutable",
                    "name": "proofPathIndices",
                    "nameLocation": "5555:16:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 1960,
                    "src": "5538:33:10",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                      "typeString": "uint8[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 1891,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5538:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "id": 1892,
                      "nodeType": "ArrayTypeName",
                      "src": "5538:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                        "typeString": "uint8[]"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5425:152:10"
              },
              "returnParameters": {
                "id": 1895,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "5585:0:10"
              },
              "scope": 2101,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 2024,
              "nodeType": "FunctionDefinition",
              "src": "6905:857:10",
              "nodes": [],
              "body": {
                "id": 2023,
                "nodeType": "Block",
                "src": "7124:638:10",
                "nodes": [],
                "statements": [
                  {
                    "assignments": [
                      1983
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1983,
                        "mutability": "mutable",
                        "name": "publicSignals",
                        "nameLocation": "7152:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2023,
                        "src": "7134:31:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1981,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7134:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1982,
                          "length": {
                            "hexValue": "34",
                            "id": 1980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7142:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "7134:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1989,
                    "initialValue": {
                      "components": [
                        {
                          "id": 1984,
                          "name": "root",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1963,
                          "src": "7182:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1985,
                          "name": "nullifierHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1969,
                          "src": "7200:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1986,
                          "name": "signalHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1967,
                          "src": "7227:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1987,
                          "name": "externalNullifierHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1971,
                          "src": "7251:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1988,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7168:114:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7134:148:10"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "components": [
                            {
                              "baseExpression": {
                                "id": 1991,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1975,
                                "src": "7319:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                  "typeString": "uint256[8] calldata"
                                }
                              },
                              "id": 1993,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7325:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7319:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1994,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1975,
                                "src": "7329:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                  "typeString": "uint256[8] calldata"
                                }
                              },
                              "id": 1996,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 1995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7335:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7329:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1997,
                          "isConstant": false,
                          "isInlineArray": true,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7318:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "components": [
                                {
                                  "baseExpression": {
                                    "id": 1998,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1975,
                                    "src": "7354:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                      "typeString": "uint256[8] calldata"
                                    }
                                  },
                                  "id": 2000,
                                  "indexExpression": {
                                    "hexValue": "32",
                                    "id": 1999,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7360:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7354:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 2001,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1975,
                                    "src": "7364:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                      "typeString": "uint256[8] calldata"
                                    }
                                  },
                                  "id": 2003,
                                  "indexExpression": {
                                    "hexValue": "33",
                                    "id": 2002,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7370:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7364:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2004,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7353:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "baseExpression": {
                                    "id": 2005,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1975,
                                    "src": "7376:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                      "typeString": "uint256[8] calldata"
                                    }
                                  },
                                  "id": 2007,
                                  "indexExpression": {
                                    "hexValue": "34",
                                    "id": 2006,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7382:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    },
                                    "value": "4"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7376:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 2008,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1975,
                                    "src": "7386:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                      "typeString": "uint256[8] calldata"
                                    }
                                  },
                                  "id": 2010,
                                  "indexExpression": {
                                    "hexValue": "35",
                                    "id": 2009,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7392:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_5_by_1",
                                      "typeString": "int_const 5"
                                    },
                                    "value": "5"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7386:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2011,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7375:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            }
                          ],
                          "id": 2012,
                          "isConstant": false,
                          "isInlineArray": true,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7352:44:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr",
                            "typeString": "uint256[2] memory[2] memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "baseExpression": {
                                "id": 2013,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1975,
                                "src": "7411:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                  "typeString": "uint256[8] calldata"
                                }
                              },
                              "id": 2015,
                              "indexExpression": {
                                "hexValue": "36",
                                "id": 2014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7417:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7411:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2016,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1975,
                                "src": "7421:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                  "typeString": "uint256[8] calldata"
                                }
                              },
                              "id": 2018,
                              "indexExpression": {
                                "hexValue": "37",
                                "id": 2017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7427:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_7_by_1",
                                  "typeString": "int_const 7"
                                },
                                "value": "7"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7421:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2019,
                          "isConstant": false,
                          "isInlineArray": true,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7410:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        {
                          "id": 2020,
                          "name": "publicSignals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1983,
                          "src": "7444:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                            "typeString": "uint256[4] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr",
                            "typeString": "uint256[2] memory[2] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                            "typeString": "uint256[4] memory"
                          }
                        ],
                        "id": 1990,
                        "name": "verifyProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          2024,
                          1154
                        ],
                        "referencedDeclaration": 1154,
                        "src": "7293:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$4_memory_ptr_$returns$__$",
                          "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[4] memory) view"
                        }
                      },
                      "id": 2021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7293:174:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2022,
                    "nodeType": "ExpressionStatement",
                    "src": "7293:174:10"
                  }
                ]
              },
              "baseFunctions": [
                2121
              ],
              "documentation": {
                "id": 1961,
                "nodeType": "StructuredDocumentation",
                "src": "6396:504:10",
                "text": "@notice Reverts if the zero-knowledge proof is invalid.\n @param root The of the Merkle tree\n @param groupId The id of the Semaphore group\n @param signalHash A keccak256 hash of the Semaphore signal\n @param nullifierHash The nullifier hash\n @param externalNullifierHash A keccak256 hash of the external nullifier\n @param proof The zero-knowledge proof\n @dev  Note that a double-signaling check is not included here, and should be carried by the caller."
              },
              "functionSelector": "3bc778e3",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "verifyProof",
              "nameLocation": "6914:11:10",
              "parameters": {
                "id": 1976,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1963,
                    "mutability": "mutable",
                    "name": "root",
                    "nameLocation": "6943:4:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 2024,
                    "src": "6935:12:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1962,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6935:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1965,
                    "mutability": "mutable",
                    "name": "groupId",
                    "nameLocation": "6965:7:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 2024,
                    "src": "6957:15:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1964,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6957:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1967,
                    "mutability": "mutable",
                    "name": "signalHash",
                    "nameLocation": "6990:10:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 2024,
                    "src": "6982:18:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1966,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6982:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1969,
                    "mutability": "mutable",
                    "name": "nullifierHash",
                    "nameLocation": "7018:13:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 2024,
                    "src": "7010:21:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1968,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7010:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1971,
                    "mutability": "mutable",
                    "name": "externalNullifierHash",
                    "nameLocation": "7049:21:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 2024,
                    "src": "7041:29:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1970,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7041:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1975,
                    "mutability": "mutable",
                    "name": "proof",
                    "nameLocation": "7100:5:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 2024,
                    "src": "7080:25:10",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                      "typeString": "uint256[8]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 1972,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7080:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1974,
                      "length": {
                        "hexValue": "38",
                        "id": 1973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7088:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "7080:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
                        "typeString": "uint256[8]"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "6925:186:10"
              },
              "returnParameters": {
                "id": 1977,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "7124:0:10"
              },
              "scope": 2101,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 2043,
              "nodeType": "FunctionDefinition",
              "src": "8200:147:10",
              "nodes": [],
              "body": {
                "id": 2042,
                "nodeType": "Block",
                "src": "8251:96:10",
                "nodes": [],
                "statements": [
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2030,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8265:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8269:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8265:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 2032,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1771,
                        "src": "8279:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8265:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2037,
                    "nodeType": "IfStatement",
                    "src": "8261:48:10",
                    "trueBody": {
                      "errorCall": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2034,
                          "name": "Unauthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1735,
                          "src": "8295:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8295:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2036,
                      "nodeType": "RevertStatement",
                      "src": "8288:21:10"
                    }
                  },
                  {
                    "expression": {
                      "id": 2040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2038,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1771,
                        "src": "8320:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 2039,
                        "name": "newManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2027,
                        "src": "8330:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8320:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2041,
                    "nodeType": "ExpressionStatement",
                    "src": "8320:20:10"
                  }
                ]
              },
              "documentation": {
                "id": 2025,
                "nodeType": "StructuredDocumentation",
                "src": "8019:176:10",
                "text": "@notice Transfer management access to a different address, or to 0x0 to renounce. Can only be called by the manager\n @param newManager The address of the new manager"
              },
              "functionSelector": "66e759ee",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "transferAccess",
              "nameLocation": "8209:14:10",
              "parameters": {
                "id": 2028,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2027,
                    "mutability": "mutable",
                    "name": "newManager",
                    "nameLocation": "8232:10:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 2043,
                    "src": "8224:18:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2026,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8224:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8223:20:10"
              },
              "returnParameters": {
                "id": 2029,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "8251:0:10"
              },
              "scope": 2101,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 2100,
              "nodeType": "FunctionDefinition",
              "src": "8796:532:10",
              "nodes": [],
              "body": {
                "id": 2099,
                "nodeType": "Block",
                "src": "8900:428:10",
                "nodes": [],
                "statements": [
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2053,
                          "name": "root",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2048,
                          "src": "8927:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2054,
                            "name": "latestRoots",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1780,
                            "src": "8935:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2056,
                          "indexExpression": {
                            "id": 2055,
                            "name": "groupId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2046,
                            "src": "8947:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8935:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8927:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2058,
                            "name": "latestRoots",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1780,
                            "src": "8959:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2060,
                          "indexExpression": {
                            "id": 2059,
                            "name": "groupId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2046,
                            "src": "8971:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8959:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2061,
                          "name": "EMPTY_LEAF",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1766,
                          "src": "8983:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8959:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "8927:66:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2096,
                    "nodeType": "IfStatement",
                    "src": "8910:390:10",
                    "trueBody": {
                      "id": 2095,
                      "nodeType": "Block",
                      "src": "9004:296:10",
                      "statements": [
                        {
                          "assignments": [
                            2066
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2066,
                              "mutability": "mutable",
                              "name": "rootData",
                              "nameLocation": "9037:8:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 2095,
                              "src": "9018:27:10",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RootHistory_$1755_memory_ptr",
                                "typeString": "struct Semaphore.RootHistory"
                              },
                              "typeName": {
                                "id": 2065,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2064,
                                  "name": "RootHistory",
                                  "nameLocations": [
                                    "9018:11:10"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1755,
                                  "src": "9018:11:10"
                                },
                                "referencedDeclaration": 1755,
                                "src": "9018:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RootHistory_$1755_storage_ptr",
                                  "typeString": "struct Semaphore.RootHistory"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2070,
                          "initialValue": {
                            "baseExpression": {
                              "id": 2067,
                              "name": "rootHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1776,
                              "src": "9048:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RootHistory_$1755_storage_$",
                                "typeString": "mapping(uint256 => struct Semaphore.RootHistory storage ref)"
                              }
                            },
                            "id": 2069,
                            "indexExpression": {
                              "id": 2068,
                              "name": "root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2048,
                              "src": "9060:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9048:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RootHistory_$1755_storage",
                              "typeString": "struct Semaphore.RootHistory storage ref"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9018:47:10"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2071,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9084:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9090:9:10",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9084:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 2073,
                                  "name": "rootData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2066,
                                  "src": "9102:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RootHistory_$1755_memory_ptr",
                                    "typeString": "struct Semaphore.RootHistory memory"
                                  }
                                },
                                "id": 2074,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9111:9:10",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1754,
                                "src": "9102:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "9084:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 2076,
                              "name": "ROOT_HISTORY_EXPIRY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1759,
                              "src": "9123:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9084:58:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2081,
                          "nodeType": "IfStatement",
                          "src": "9080:100:10",
                          "trueBody": {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2078,
                                "name": "ExpiredRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1744,
                                "src": "9167:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9167:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2080,
                            "nodeType": "RevertStatement",
                            "src": "9160:20:10"
                          }
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 2085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2082,
                                  "name": "rootData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2066,
                                  "src": "9199:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RootHistory_$1755_memory_ptr",
                                    "typeString": "struct Semaphore.RootHistory memory"
                                  }
                                },
                                "id": 2083,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9208:7:10",
                                "memberName": "groupId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1752,
                                "src": "9199:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9219:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9199:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 2089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2086,
                                  "name": "rootData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2066,
                                  "src": "9224:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RootHistory_$1755_memory_ptr",
                                    "typeString": "struct Semaphore.RootHistory memory"
                                  }
                                },
                                "id": 2087,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9233:9:10",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1754,
                                "src": "9224:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9246:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9224:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9199:48:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2094,
                          "nodeType": "IfStatement",
                          "src": "9195:94:10",
                          "trueBody": {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2091,
                                "name": "NonExistentRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1747,
                                "src": "9272:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9272:17:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2093,
                            "nodeType": "RevertStatement",
                            "src": "9265:24:10"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 2097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9317:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 2052,
                    "id": 2098,
                    "nodeType": "Return",
                    "src": "9310:11:10"
                  }
                ]
              },
              "documentation": {
                "id": 2044,
                "nodeType": "StructuredDocumentation",
                "src": "8604:187:10",
                "text": "@notice Checks if a given root value is valid and has been added to the root history\n @param groupId The id of the group\n @param root  The root of a given identity group"
              },
              "functionSelector": "e914f0e2",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "checkValidRoot",
              "nameLocation": "8805:14:10",
              "parameters": {
                "id": 2049,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2046,
                    "mutability": "mutable",
                    "name": "groupId",
                    "nameLocation": "8837:7:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 2100,
                    "src": "8829:15:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2045,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8829:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2048,
                    "mutability": "mutable",
                    "name": "root",
                    "nameLocation": "8862:4:10",
                    "nodeType": "VariableDeclaration",
                    "scope": 2100,
                    "src": "8854:12:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2047,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8854:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8819:53:10"
              },
              "returnParameters": {
                "id": 2052,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2051,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2100,
                    "src": "8894:4:10",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 2050,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "8894:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8893:6:10"
              },
              "scope": 2101,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            }
          ],
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 1721,
                "name": "IWorldID",
                "nameLocations": [
                  "605:8:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2122,
                "src": "605:8:10"
              },
              "id": 1722,
              "nodeType": "InheritanceSpecifier",
              "src": "605:8:10"
            },
            {
              "baseName": {
                "id": 1723,
                "name": "SemaphoreCore",
                "nameLocations": [
                  "615:13:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 146,
                "src": "615:13:10"
              },
              "id": 1724,
              "nodeType": "InheritanceSpecifier",
              "src": "615:13:10"
            },
            {
              "baseName": {
                "id": 1725,
                "name": "Verifier",
                "nameLocations": [
                  "630:8:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1155,
                "src": "630:8:10"
              },
              "id": 1726,
              "nodeType": "InheritanceSpecifier",
              "src": "630:8:10"
            },
            {
              "baseName": {
                "id": 1727,
                "name": "SemaphoreGroups",
                "nameLocations": [
                  "640:15:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 337,
                "src": "640:15:10"
              },
              "id": 1728,
              "nodeType": "InheritanceSpecifier",
              "src": "640:15:10"
            }
          ],
          "canonicalName": "Semaphore",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 1720,
            "nodeType": "StructuredDocumentation",
            "src": "429:154:10",
            "text": "@title Semaphore Group Manager\n @author Miguel Piedrafita\n @notice A simple implementation of a ZK-based identity group manager using Semaphore"
          },
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2101,
            337,
            1219,
            21,
            1155,
            146,
            1164,
            2122
          ],
          "name": "Semaphore",
          "nameLocation": "592:9:10",
          "scope": 2102,
          "usedErrors": [
            341,
            1735,
            1738,
            1741,
            1744,
            1747,
            1750
          ]
        }
      ],
      "license": "MIT"
    },
    "id": 10
  }